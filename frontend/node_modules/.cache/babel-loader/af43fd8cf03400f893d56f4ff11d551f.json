{"ast":null,"code":"import React from\"react\";import{useModal}from\"../../utils/useModal\";import{useQuery}from\"@apollo/react-hooks\";import{CONTACT_QUERY}from\"../../gql\";import{FlexWrapper}from\"../../styled/containers\";import{ContactDetailModal}from\"./ContactDetailModal\";import{EditContactModal}from\"./EditContactModal\";import{BlackButton}from\"../../styled/buttons\";import{Loading,Error}from\"../global\";import{Modal,ModalArea,ModalCloseIcon}from\"../utilities/Modal\";import{Button}from\"@material-ui/core\";export var ContactDetailEditModal=function ContactDetailEditModal(_ref){var toggleOverlay=_ref.toggleOverlay,isShowingOverlay=_ref.isShowingOverlay,contactId=_ref.contactId;var _useModal=useModal(true),isShowingDetail=_useModal.isShowing,toggleDetail=_useModal.toggle;var _useModal2=useModal(),isShowingEdit=_useModal2.isShowing,toggleEdit=_useModal2.toggle;var _useQuery=useQuery(CONTACT_QUERY,{variables:{id:contactId}}),data=_useQuery.data,loading=_useQuery.loading,error=_useQuery.error;var toggleDetailEdit=function toggleDetailEdit(){toggleDetail();toggleEdit();};return React.createElement(Modal,{isShowing:isShowingOverlay},isShowingDetail&&React.createElement(ModalArea,null,React.createElement(ModalCloseIcon,{toggle:toggleOverlay}),loading&&React.createElement(Loading,null),error&&React.createElement(Error,null,error.message),data&&React.createElement(React.Fragment,null,React.createElement(ContactDetailModal,{contact:data.contact,toggleOverlay:toggleOverlay}),React.createElement(FlexWrapper,{padding:\"0\"},React.createElement(Button,{size:\"large\",color:\"secondary\",variant:\"contained\",onClick:function onClick(e){return toggleDetailEdit(toggleDetail,toggleEdit);}},\"Edit\")))),isShowingEdit&&React.createElement(ModalArea,null,React.createElement(ModalCloseIcon,{toggle:function toggle(){return toggleDetailEdit(toggleDetail,toggleEdit);}}),React.createElement(EditContactModal,{toggleOverlay:toggleOverlay,toggleDetailEdit:toggleDetailEdit,contact:data.contact,contactId:contactId})));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactDetailEditModal.js"],"names":["React","useModal","useQuery","CONTACT_QUERY","FlexWrapper","ContactDetailModal","EditContactModal","BlackButton","Loading","Error","Modal","ModalArea","ModalCloseIcon","Button","ContactDetailEditModal","toggleOverlay","isShowingOverlay","contactId","isShowingDetail","isShowing","toggleDetail","toggle","isShowingEdit","toggleEdit","variables","id","data","loading","error","toggleDetailEdit","message","contact","e"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,sBAAzB,CAEA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,aAAT,KAA8B,WAA9B,CAEA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,kBAAT,KAAmC,sBAAnC,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,WAAT,KAA4B,sBAA5B,CACA,OAASC,OAAT,CAAkBC,KAAlB,KAA+B,WAA/B,CAEA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,cAA3B,KAAiD,oBAAjD,CAEA,OAASC,MAAT,KAAuB,mBAAvB,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,MAIhC,IAHJC,CAAAA,aAGI,MAHJA,aAGI,CAFJC,gBAEI,MAFJA,gBAEI,CADJC,SACI,MADJA,SACI,eACyDhB,QAAQ,CAAC,IAAD,CADjE,CACeiB,eADf,WACIC,SADJ,CACwCC,YADxC,WACgCC,MADhC,gBAEqDpB,QAAQ,EAF7D,CAEeqB,aAFf,YAEIH,SAFJ,CAEsCI,UAFtC,YAE8BF,MAF9B,eAI6BnB,QAAQ,CAACC,aAAD,CAAgB,CACvDqB,SAAS,CAAE,CAAEC,EAAE,CAAER,SAAN,CAD4C,CAAhB,CAJrC,CAIIS,IAJJ,WAIIA,IAJJ,CAIUC,OAJV,WAIUA,OAJV,CAImBC,KAJnB,WAImBA,KAJnB,CAQJ,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BT,YAAY,GACZG,UAAU,GACX,CAHD,CAKA,MACE,qBAAC,KAAD,EAAO,SAAS,CAAEP,gBAAlB,EACGE,eAAe,EACd,oBAAC,SAAD,MACE,oBAAC,cAAD,EAAgB,MAAM,CAAEH,aAAxB,EADF,CAEGY,OAAO,EAAI,oBAAC,OAAD,MAFd,CAGGC,KAAK,EAAI,oBAAC,KAAD,MAAQA,KAAK,CAACE,OAAd,CAHZ,CAIGJ,IAAI,EACH,wCACE,oBAAC,kBAAD,EACE,OAAO,CAAEA,IAAI,CAACK,OADhB,CAEE,aAAa,CAAEhB,aAFjB,EADF,CAKE,oBAAC,WAAD,EAAa,OAAO,CAAC,GAArB,EACE,oBAAC,MAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,WAFR,CAGE,OAAO,CAAC,WAHV,CAIE,OAAO,CAAE,iBAAAiB,CAAC,QAAIH,CAAAA,gBAAgB,CAACT,YAAD,CAAeG,UAAf,CAApB,EAJZ,SADF,CALF,CALJ,CAFJ,CA0BGD,aAAa,EACZ,oBAAC,SAAD,MACE,oBAAC,cAAD,EACE,MAAM,CAAE,wBAAMO,CAAAA,gBAAgB,CAACT,YAAD,CAAeG,UAAf,CAAtB,EADV,EADF,CAIE,oBAAC,gBAAD,EACE,aAAa,CAAER,aADjB,CAEE,gBAAgB,CAAEc,gBAFpB,CAGE,OAAO,CAAEH,IAAI,CAACK,OAHhB,CAIE,SAAS,CAAEd,SAJb,EAJF,CA3BJ,CADF,CA0CD,CA3DM","sourcesContent":["import React from \"react\";\nimport { useModal } from \"../../utils/useModal\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CONTACT_QUERY } from \"../../gql\";\n\nimport { FlexWrapper } from \"../../styled/containers\";\nimport { ContactDetailModal } from \"./ContactDetailModal\";\nimport { EditContactModal } from \"./EditContactModal\";\nimport { BlackButton } from \"../../styled/buttons\";\nimport { Loading, Error } from \"../global\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities/Modal\";\n\nimport { Button } from \"@material-ui/core\";\n\nexport const ContactDetailEditModal = ({\n  toggleOverlay,\n  isShowingOverlay,\n  contactId\n}) => {\n  const { isShowing: isShowingDetail, toggle: toggleDetail } = useModal(true);\n  const { isShowing: isShowingEdit, toggle: toggleEdit } = useModal();\n\n  const { data, loading, error } = useQuery(CONTACT_QUERY, {\n    variables: { id: contactId }\n  });\n\n  const toggleDetailEdit = () => {\n    toggleDetail();\n    toggleEdit();\n  };\n\n  return (\n    <Modal isShowing={isShowingOverlay}>\n      {isShowingDetail && (\n        <ModalArea>\n          <ModalCloseIcon toggle={toggleOverlay} />\n          {loading && <Loading />}\n          {error && <Error>{error.message}</Error>}\n          {data && (\n            <>\n              <ContactDetailModal\n                contact={data.contact}\n                toggleOverlay={toggleOverlay}\n              />\n              <FlexWrapper padding=\"0\">\n                <Button\n                  size=\"large\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={e => toggleDetailEdit(toggleDetail, toggleEdit)}\n                >\n                  Edit\n                </Button>\n              </FlexWrapper>\n            </>\n          )}\n        </ModalArea>\n      )}\n      {isShowingEdit && (\n        <ModalArea>\n          <ModalCloseIcon\n            toggle={() => toggleDetailEdit(toggleDetail, toggleEdit)}\n          />\n          <EditContactModal\n            toggleOverlay={toggleOverlay}\n            toggleDetailEdit={toggleDetailEdit}\n            contact={data.contact}\n            contactId={contactId}\n          />\n        </ModalArea>\n      )}\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}