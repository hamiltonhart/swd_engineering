{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/EditDriveForm.js\";\nimport React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\nimport { Button, ClickAwayListener } from \"@material-ui/core\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_DRIVE, HOME_PAGE_QUERY, ALL_DRIVES_QUERY } from \"../../gql\";\nexport const EditDriveForm = ({\n  toggle,\n  driveId,\n  drive\n}) => {\n  const [updateDrive, {\n    error: updateError\n  }] = useMutation(UPDATE_DRIVE);\n  const [driveNumber, setDriveNumber] = useState(`${drive.driveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(drive.driveCapacityGb);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateDrive({\n      variables: {\n        id: driveId,\n        driveNumber,\n        driveCapacityGb\n      },\n      onCompleted: editDriveCompleted()\n    });\n  };\n\n  const editDriveCompleted = () => {\n    toggle();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FlexWrapper, {\n    as: \"form\",\n    minWidth: \"350px\",\n    maxWidth: \"350px\",\n    justifyContent: \"space-evenly\",\n    margin: \"0 0 0 0 \",\n    padding: \"30px 20px 20px 30px\",\n    rowGap: \"30px\",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"4/6\",\n    maxWidth: \"100px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Number \", React.createElement(Required, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"*\")), React.createElement(Input, {\n    placeholder: \"1\",\n    value: driveNumber,\n    onChange: e => setDriveNumber(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"6/8\",\n    maxWidth: \"100px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Capacity \", React.createElement(Required, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"*\")), React.createElement(Select, {\n    defaultValue: driveCapacityGb,\n    padding: \"16px 18px\",\n    onChange: e => setDriveCapacityGb(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"250GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"250GB\"), React.createElement(\"option\", {\n    value: \"500GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"500GB\"), React.createElement(\"option\", {\n    value: \"1TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"1TB\"), React.createElement(\"option\", {\n    value: \"2TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"2TB\"))), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !driveNumber.trim() || !driveCapacityGb || releaseActive || deleteActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, `Edit Drive ${drive.driveNumber}`))));\n}; // const ReleaseDriveButtons = ({\n//   releaseActive,\n//   setReleaseActive,\n//   deleteActive,\n//   handleRelease\n// }) =>\n//   releaseActive ? (\n//     <ClickAwayListener onClickAway={() => setReleaseActive(false)}>\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         onClick={e => handleRelease(e)}\n//       >\n//         Release Drive\n//       </Button>\n//     </ClickAwayListener>\n//   ) : (\n//     <Button\n//       color=\"primary\"\n//       variant=\"outlined\"\n//       disabled={deleteActive}\n//       onClick={e => setReleaseActive(true)}\n//     >\n//       Release Drive\n//     </Button>\n//   );","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/EditDriveForm.js"],"names":["React","useState","InputWrapper","FlexWrapper","Input","Label","Select","Required","Button","ClickAwayListener","useMutation","UPDATE_DRIVE","HOME_PAGE_QUERY","ALL_DRIVES_QUERY","EditDriveForm","toggle","driveId","drive","updateDrive","error","updateError","driveNumber","setDriveNumber","driveCapacityGb","setDriveCapacityGb","handleSubmit","e","preventDefault","variables","id","onCompleted","editDriveCompleted","target","value","trim","releaseActive","deleteActive"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\n\nimport { Button, ClickAwayListener } from \"@material-ui/core\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_DRIVE, HOME_PAGE_QUERY, ALL_DRIVES_QUERY } from \"../../gql\";\n\nexport const EditDriveForm = ({ toggle, driveId, drive }) => {\n  const [updateDrive, { error: updateError }] = useMutation(UPDATE_DRIVE);\n\n  const [driveNumber, setDriveNumber] = useState(`${drive.driveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(drive.driveCapacityGb);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateDrive({\n      variables: {\n        id: driveId,\n        driveNumber,\n        driveCapacityGb,\n      },\n      onCompleted: editDriveCompleted(),\n    });\n  };\n\n  const editDriveCompleted = () => {\n    toggle();\n  };\n\n  return (\n    <>\n      <FlexWrapper\n        as=\"form\"\n        minWidth=\"350px\"\n        maxWidth=\"350px\"\n        justifyContent=\"space-evenly\"\n        margin=\"0 0 0 0 \"\n        padding=\"30px 20px 20px 30px\"\n        rowGap=\"30px\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <InputWrapper gridColumn=\"4/6\" maxWidth=\"100px\">\n          <Label>\n            Number <Required>*</Required>\n          </Label>\n          <Input\n            placeholder=\"1\"\n            value={driveNumber}\n            onChange={(e) => setDriveNumber(e.target.value)}\n          />\n        </InputWrapper>\n\n        <InputWrapper gridColumn=\"6/8\" maxWidth=\"100px\">\n          <Label>\n            Capacity <Required>*</Required>\n          </Label>\n          <Select\n            defaultValue={driveCapacityGb}\n            padding=\"16px 18px\"\n            onChange={(e) => setDriveCapacityGb(e.target.value)}\n          >\n            <option value=\"250GB\">250GB</option>\n            <option value=\"500GB\">500GB</option>\n            <option value=\"1TB\">1TB</option>\n            <option value=\"2TB\">2TB</option>\n          </Select>\n        </InputWrapper>\n\n        <InputWrapper gridColumn=\"4 / 10\" width=\"100%\">\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !driveNumber.trim() ||\n              !driveCapacityGb ||\n              releaseActive ||\n              deleteActive\n            }\n          >\n            {`Edit Drive ${drive.driveNumber}`}\n          </Button>\n        </InputWrapper>\n      </FlexWrapper>\n    </>\n  );\n};\n\n// const ReleaseDriveButtons = ({\n//   releaseActive,\n//   setReleaseActive,\n//   deleteActive,\n//   handleRelease\n// }) =>\n//   releaseActive ? (\n//     <ClickAwayListener onClickAway={() => setReleaseActive(false)}>\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         onClick={e => handleRelease(e)}\n//       >\n//         Release Drive\n//       </Button>\n//     </ClickAwayListener>\n//   ) : (\n//     <Button\n//       color=\"primary\"\n//       variant=\"outlined\"\n//       disabled={deleteActive}\n//       onClick={e => setReleaseActive(true)}\n//     >\n//       Release Drive\n//     </Button>\n//   );\n"]},"metadata":{},"sourceType":"module"}