{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactDetail.js\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CONTACT_QUERY } from \"../../gql\";\nimport { makeStyles, Typography, IconButton, Button } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Error, Loading } from \"../global\";\nimport { ContactEdit } from \"./ContactEdit\";\nimport { Link } from \"react-router-dom\";\nimport { NewContactIconButton } from \"./ContactUtilities/NewContactIconButton\";\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    \"& div\": {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  },\n  detailBody: {\n    marginTop: theme.spacing(2),\n    width: \"100%\"\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"20% 80%\",\n    gridGap: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  label: {\n    color: theme.palette.grey[700],\n    fontSize: \".85em\",\n    alignSelf: \"baseline\",\n    justifySelf: \"stretch\"\n  },\n  defaultView: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\nexport const ContactDetail = ({\n  contactId,\n  isShowingEdit,\n  toggleEdit,\n  setContactId\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(CONTACT_QUERY, {\n    variables: {\n      id: contactId\n    }\n  });\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, contactId ? React.createElement(React.Fragment, null, loading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), data && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"left\",\n    variant: \"h4\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, `${data.contact.firstName} ${data.contact.lastName}`), React.createElement(IconButton, {\n    onClick: toggleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, isShowingEdit ? React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), !isShowingEdit && React.createElement(NewContactIconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), !isShowingEdit ? React.createElement(\"div\", {\n    className: classes.detailBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Company\"), React.createElement(Typography, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, data.contact.company)), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Typography, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, data.contact.title)), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(Typography, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, data.contact.phoneNumber)), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Typography, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, data.contact.email)), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Projects\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, data.contact.rentalProjects.map(rentalProject => React.createElement(Typography, {\n    component: Link,\n    align: \"left\",\n    to: `/rentals/${rentalProject.project.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, rentalProject.project.season ? `${rentalProject.project.title} S${rentalProject.project.season}` : `${rentalProject.project.title}`)))), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, data.contact.notes)))) : React.createElement(ContactEdit, {\n    contact: data.contact,\n    setContactId: setContactId,\n    toggleEdit: toggleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: classes.defaultView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Select a contact\"), React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"or\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Add a New Contact\")));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactDetail.js"],"names":["React","useQuery","CONTACT_QUERY","makeStyles","Typography","IconButton","Button","EditIcon","CloseIcon","Error","Loading","ContactEdit","Link","NewContactIconButton","useStyles","theme","heading","display","justifyContent","alignItems","detailBody","marginTop","spacing","width","grid","gridTemplateColumns","gridGap","marginBottom","label","color","palette","grey","fontSize","alignSelf","justifySelf","defaultView","flexDirection","ContactDetail","contactId","isShowingEdit","toggleEdit","setContactId","data","loading","error","variables","id","classes","contact","firstName","lastName","company","title","phoneNumber","email","rentalProjects","map","rentalProject","project","season","notes"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CONTACT_QUERY } from \"../../gql\";\n\nimport { makeStyles, Typography, IconButton, Button } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Error, Loading } from \"../global\";\nimport { ContactEdit } from \"./ContactEdit\";\nimport { Link } from \"react-router-dom\";\nimport { NewContactIconButton } from \"./ContactUtilities/NewContactIconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    \"& div\": {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n  detailBody: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"20% 80%\",\n    gridGap: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  label: {\n    color: theme.palette.grey[700],\n    fontSize: \".85em\",\n    alignSelf: \"baseline\",\n    justifySelf: \"stretch\",\n  },\n  defaultView: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport const ContactDetail = ({\n  contactId,\n  isShowingEdit,\n  toggleEdit,\n  setContactId,\n}) => {\n  const { data, loading, error } = useQuery(CONTACT_QUERY, {\n    variables: { id: contactId },\n  });\n\n  const classes = useStyles();\n  return (\n    <>\n      {contactId ? (\n        <>\n          {loading && <Loading />}\n          {error && <Error error={error} />}\n          {data && (\n            <>\n              <div className={classes.heading}>\n                <div>\n                  <Typography align=\"left\" variant=\"h4\" color=\"primary\">\n                    {`${data.contact.firstName} ${data.contact.lastName}`}\n                  </Typography>\n                  <IconButton onClick={toggleEdit}>\n                    {isShowingEdit ? <CloseIcon /> : <EditIcon />}\n                  </IconButton>\n                </div>\n                {!isShowingEdit && <NewContactIconButton />}\n              </div>\n              {!isShowingEdit ? (\n                <div className={classes.detailBody}>\n                  <div className={classes.grid}>\n                    <Typography className={classes.label} align=\"right\">\n                      Company\n                    </Typography>\n                    <Typography align=\"left\">{data.contact.company}</Typography>\n                  </div>\n                  <div className={classes.grid}>\n                    <Typography className={classes.label} align=\"right\">\n                      Title\n                    </Typography>\n                    <Typography align=\"left\">{data.contact.title}</Typography>\n                  </div>\n                  <div className={classes.grid}>\n                    <Typography className={classes.label} align=\"right\">\n                      Phone\n                    </Typography>\n                    <Typography align=\"left\">\n                      {data.contact.phoneNumber}\n                    </Typography>\n                  </div>\n                  <div className={classes.grid}>\n                    <Typography className={classes.label} align=\"right\">\n                      Email\n                    </Typography>\n                    <Typography align=\"left\">{data.contact.email}</Typography>\n                  </div>\n                  <div className={classes.grid}>\n                    <Typography className={classes.label} align=\"right\">\n                      Projects\n                    </Typography>\n                    <div>\n                      {data.contact.rentalProjects.map((rentalProject) => (\n                        <Typography\n                          component={Link}\n                          align=\"left\"\n                          to={`/rentals/${rentalProject.project.id}`}\n                        >\n                          {rentalProject.project.season\n                            ? `${rentalProject.project.title} S${rentalProject.project.season}`\n                            : `${rentalProject.project.title}`}\n                        </Typography>\n                      ))}\n                    </div>\n                  </div>\n                  <div className={classes.grid}>\n                    <Typography className={classes.label} align=\"right\">\n                      Notes\n                    </Typography>\n                    <div>\n                      <Typography align=\"left\">{data.contact.notes}</Typography>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <ContactEdit\n                  contact={data.contact}\n                  setContactId={setContactId}\n                  toggleEdit={toggleEdit}\n                />\n              )}\n            </>\n          )}\n        </>\n      ) : (\n        <div className={classes.defaultView}>\n          <Typography align=\"center\" variant=\"h4\">\n            Select a contact\n          </Typography>\n          <Typography align=\"center\" variant=\"h4\">\n            or\n          </Typography>\n          <Button>Add a New Contact</Button>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}