{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/NewDriveForm.js\";\nimport React, { useState } from \"react\";\nimport { InputWrapper } from \"../../styled/containers\";\nimport { Label } from \"../../styled/forms\";\nimport { makeStyles, Button, Grid, InputLabel, OutlinedInput, Select, MenuItem, TextField, FormControl, Input } from \"@material-ui/core\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_DRIVE, ALL_DRIVES_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport const NewDriveForm = ({\n  toggle,\n  nextDriveNumber\n}) => {\n  const [createDrive, {\n    error: createError\n  }] = useMutation(CREATE_DRIVE);\n  const [driveNumber, setDriveNumber] = useState(`${nextDriveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(\"2TB\");\n  const [driveQuantity, setDriveQuantity] = useState(\"1\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createDrive({\n      variables: {\n        driveNumber,\n        driveCapacityGb,\n        driveQuantity\n      },\n      refetchQueries: [{\n        query: ALL_DRIVES_QUERY\n      }, {\n        query: HOME_PAGE_QUERY\n      }],\n      onCompleted: createDriveCompleted()\n    });\n  };\n\n  const createDriveCompleted = () => {\n    toggle();\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    as: \"form\",\n    spacing: 2,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Drive Number\",\n    placeholder: \"ex. 1\",\n    variant: \"outlined\",\n    defaultValue: driveNumber,\n    fullWidth: true,\n    onChange: e => setDriveNumber(e.target.value),\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"drive-capacity-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Capacity\"), React.createElement(Select, {\n    labelId: \"drive-capacity-label\",\n    label: \"Capacity\",\n    id: \"drive-capacity-select\",\n    color: \"primary\",\n    fullWidth: true,\n    defaultValue: driveCapacityGb,\n    onChange: e => setDriveCapacityGb(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"250GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"250GB\"), React.createElement(MenuItem, {\n    value: \"500GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"500GB\"), React.createElement(MenuItem, {\n    value: \"1TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"1TB\"), React.createElement(MenuItem, {\n    value: \"2TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"2TB\")))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Drive Quantity\",\n    placeholder: \"ex. 1\",\n    variant: \"outlined\",\n    defaultValue: driveQuantity,\n    fullWidth: true,\n    onChange: e => setDriveQuantity(e.target.value),\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !driveNumber.trim() || !driveCapacityGb | !driveQuantity.trim(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Create Drives\")));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/NewDriveForm.js"],"names":["React","useState","InputWrapper","Label","makeStyles","Button","Grid","InputLabel","OutlinedInput","Select","MenuItem","TextField","FormControl","Input","useMutation","CREATE_DRIVE","ALL_DRIVES_QUERY","HOME_PAGE_QUERY","useStyles","theme","root","marginTop","spacing","NewDriveForm","toggle","nextDriveNumber","createDrive","error","createError","driveNumber","setDriveNumber","driveCapacityGb","setDriveCapacityGb","driveQuantity","setDriveQuantity","handleSubmit","e","preventDefault","variables","refetchQueries","query","onCompleted","createDriveCompleted","classes","target","value","shrink","trim"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { InputWrapper } from \"../../styled/containers\";\nimport { Label } from \"../../styled/forms\";\n\nimport {\n  makeStyles,\n  Button,\n  Grid,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  TextField,\n  FormControl,\n  Input,\n} from \"@material-ui/core\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_DRIVE, ALL_DRIVES_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const NewDriveForm = ({ toggle, nextDriveNumber }) => {\n  const [createDrive, { error: createError }] = useMutation(CREATE_DRIVE);\n\n  const [driveNumber, setDriveNumber] = useState(`${nextDriveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(\"2TB\");\n  const [driveQuantity, setDriveQuantity] = useState(\"1\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createDrive({\n      variables: {\n        driveNumber,\n        driveCapacityGb,\n        driveQuantity,\n      },\n      refetchQueries: [{ query: ALL_DRIVES_QUERY }, { query: HOME_PAGE_QUERY }],\n      onCompleted: createDriveCompleted(),\n    });\n  };\n\n  const createDriveCompleted = () => {\n    toggle();\n  };\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      as=\"form\"\n      spacing={2}\n      onSubmit={(e) => handleSubmit(e)}\n    >\n      <Grid item xs={4}>\n        <TextField\n          label=\"Drive Number\"\n          placeholder=\"ex. 1\"\n          variant=\"outlined\"\n          defaultValue={driveNumber}\n          fullWidth\n          onChange={(e) => setDriveNumber(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={4}>\n        <FormControl fullWidth variant=\"outlined\">\n          <InputLabel id=\"drive-capacity-label\">Capacity</InputLabel>\n          <Select\n            labelId=\"drive-capacity-label\"\n            label=\"Capacity\"\n            id=\"drive-capacity-select\"\n            color=\"primary\"\n            fullWidth\n            defaultValue={driveCapacityGb}\n            onChange={(e) => setDriveCapacityGb(e.target.value)}\n          >\n            <MenuItem value=\"250GB\">250GB</MenuItem>\n            <MenuItem value=\"500GB\">500GB</MenuItem>\n            <MenuItem value=\"1TB\">1TB</MenuItem>\n            <MenuItem value=\"2TB\">2TB</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          label=\"Drive Quantity\"\n          placeholder=\"ex. 1\"\n          variant=\"outlined\"\n          defaultValue={driveQuantity}\n          fullWidth\n          onChange={(e) => setDriveQuantity(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <Button\n          type=\"submit\"\n          size=\"large\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={\n            !driveNumber.trim() || !driveCapacityGb | !driveQuantity.trim()\n          }\n        >\n          Create Drives\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}