{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/NewRentalModal.js\";\nimport React, { useState } from \"react\";\nimport { useModal } from \"../../utils\";\nimport { Redirect } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_RENTAL, HOME_PAGE_QUERY, GET_RENTALS_QUERY } from \"../../gql\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Error } from \"../global\";\nimport { makeStyles, Button, InputLabel, MenuItem, Select, IconButton, TextField, FormControl } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold\n  },\n  select: {\n    minWidth: \"212px\"\n  },\n  label: {\n    paddingLeft: \"12px\"\n  },\n  search: {}\n}));\nexport const NewRentalModal = ({\n  homeButton\n}) => {\n  const [newRentalId, setNewRentalId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [abbr, setAbbr] = useState(\"\");\n  const [googleDrive, setGoogleDrive] = useState(\"\");\n  const [season, setSeason] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [channelConfig, setChannelConfig] = useState(\"5.1\");\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [createRentalProject, {\n    error\n  }] = useMutation(CREATE_RENTAL);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await createRentalProject({\n      variables: {\n        title,\n        abbreviation: abbr,\n        filesLink: googleDrive,\n        channelConfig,\n        season,\n        startDate\n      },\n      refetchQueries: [{\n        query: GET_RENTALS_QUERY\n      }, {\n        query: HOME_PAGE_QUERY,\n        variables: {\n          limit: 8,\n          reverse: true\n        }\n      }]\n    });\n\n    if (res.data.createRentalProject.project) {\n      setNewRentalId(res.data.createRentalProject.project.id);\n    } else if (error) {\n      return React.createElement(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  };\n\n  const handleToggle = () => {\n    setTitle(\"\");\n    setAbbr(\"\");\n    setGoogleDrive(\"\");\n    setSeason(null);\n    setStartDate(null);\n    setChannelConfig(\"5.1\");\n    setGoogleDrive(\"\");\n    toggle();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, newRentalId && React.createElement(Redirect, {\n    push: true,\n    to: `/rentals/${newRentalId}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    large: true,\n    onClick: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"New Rental\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"New Rental\"), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"622px;\",\n    maxWidth: \"622px;\",\n    margin: \"20px 0 0 0 \",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    placeholder: \"Star Wars\",\n    fullWidth: true,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    label: \"Title\",\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    placeholder: \"1\",\n    value: season,\n    onChange: e => setSeason(e.target.value),\n    label: \"Season\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    placeholder: \"starwars \",\n    value: abbr,\n    onChange: e => setAbbr(e.target.value),\n    label: \"Abbreviation\",\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"new-rental-config-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Select, {\n    color: \"primary\",\n    variant: \"outlined\",\n    labelId: \"new-rental-config-label\",\n    label: \"Config\",\n    fullWidth: true,\n    required: true,\n    defaultValue: channelConfig,\n    onChange: e => setChannelConfig(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"ST\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Stereo\"), React.createElement(MenuItem, {\n    value: \"5.1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"5.1\"), React.createElement(MenuItem, {\n    value: \"7.1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"7.1\"), React.createElement(MenuItem, {\n    value: \"ATMOS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"ATMOS\"), React.createElement(MenuItem, {\n    value: \"DTS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"DTS\"), React.createElement(MenuItem, {\n    value: \"IMAX6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"IMAX 6\"), React.createElement(MenuItem, {\n    value: \"IMAX12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"IMAX 12\")))), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    type: \"date\",\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    label: \"Start Date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    placeholder: \"http://drive.google.com/to/rental/folder\",\n    fullWidth: true,\n    InputProps: {\n      endAdornment: React.createElement(IconButton, {\n        href: \"http://www.google.com\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(OpenInNewIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }))\n    },\n    value: googleDrive,\n    onChange: e => setGoogleDrive(e.target.value),\n    label: \"GoogleDrive\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"large\",\n    disabled: !title.trim() || !abbr.trim() || !googleDrive.trim(),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, `Create ${title}`))))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/NewRentalModal.js"],"names":["React","useState","useModal","Redirect","useMutation","CREATE_RENTAL","HOME_PAGE_QUERY","GET_RENTALS_QUERY","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","Error","makeStyles","Button","InputLabel","MenuItem","Select","IconButton","TextField","FormControl","OpenInNewIcon","useStyles","theme","button","fontWeight","typography","fontWeightBold","select","minWidth","label","paddingLeft","search","NewRentalModal","homeButton","newRentalId","setNewRentalId","title","setTitle","abbr","setAbbr","googleDrive","setGoogleDrive","season","setSeason","startDate","setStartDate","channelConfig","setChannelConfig","isShowing","toggle","createRentalProject","error","handleSubmit","e","preventDefault","res","variables","abbreviation","filesLink","refetchQueries","query","limit","reverse","data","project","id","handleToggle","classes","target","value","shrink","endAdornment","trim"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useModal } from \"../../utils\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_RENTAL, HOME_PAGE_QUERY, GET_RENTALS_QUERY } from \"../../gql\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Error } from \"../global\";\n\nimport {\n  makeStyles,\n  Button,\n  InputLabel,\n  MenuItem,\n  Select,\n  IconButton,\n  TextField,\n  FormControl,\n} from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  select: {\n    minWidth: \"212px\",\n  },\n  label: {\n    paddingLeft: \"12px\",\n  },\n  search: {},\n}));\n\nexport const NewRentalModal = ({ homeButton }) => {\n  const [newRentalId, setNewRentalId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [abbr, setAbbr] = useState(\"\");\n  const [googleDrive, setGoogleDrive] = useState(\"\");\n  const [season, setSeason] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [channelConfig, setChannelConfig] = useState(\"5.1\");\n\n  const { isShowing, toggle } = useModal();\n\n  const [createRentalProject, { error }] = useMutation(CREATE_RENTAL);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await createRentalProject({\n      variables: {\n        title,\n        abbreviation: abbr,\n        filesLink: googleDrive,\n        channelConfig,\n        season,\n        startDate,\n      },\n      refetchQueries: [\n        { query: GET_RENTALS_QUERY },\n        { query: HOME_PAGE_QUERY, variables: { limit: 8, reverse: true } },\n      ],\n    });\n    if (res.data.createRentalProject.project) {\n      setNewRentalId(res.data.createRentalProject.project.id);\n    } else if (error) {\n      return <Error error={error} />;\n    }\n  };\n\n  const handleToggle = () => {\n    setTitle(\"\");\n    setAbbr(\"\");\n    setGoogleDrive(\"\");\n    setSeason(null);\n    setStartDate(null);\n    setChannelConfig(\"5.1\");\n    setGoogleDrive(\"\");\n    toggle();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {newRentalId && <Redirect push to={`/rentals/${newRentalId}`} />}\n\n      <Button\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        large\n        onClick={() => toggle()}\n      >\n        New Rental\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={handleToggle} />\n\n          <PageHeading>New Rental</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={(e) => handleSubmit(e)}\n          >\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                placeholder=\"Star Wars\"\n                fullWidth\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                label=\"Title\"\n                required\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 2\">\n              <TextField\n                placeholder=\"1\"\n                value={season}\n                onChange={(e) => setSeason(e.target.value)}\n                label=\"Season\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 4\">\n              <TextField\n                placeholder=\"starwars \"\n                value={abbr}\n                onChange={(e) => setAbbr(e.target.value)}\n                label=\"Abbreviation\"\n                required\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 3\">\n              <FormControl fullWidth variant=\"outlined\" required>\n                <InputLabel id=\"new-rental-config-label\">Config</InputLabel>\n                <Select\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  labelId=\"new-rental-config-label\"\n                  label=\"Config\"\n                  fullWidth\n                  required\n                  defaultValue={channelConfig}\n                  onChange={(e) => setChannelConfig(e.target.value)}\n                >\n                  <MenuItem value=\"ST\">Stereo</MenuItem>\n                  <MenuItem value=\"5.1\">5.1</MenuItem>\n                  <MenuItem value=\"7.1\">7.1</MenuItem>\n                  <MenuItem value=\"ATMOS\">ATMOS</MenuItem>\n                  <MenuItem value=\"DTS\">DTS</MenuItem>\n                  <MenuItem value=\"IMAX6\">IMAX 6</MenuItem>\n                  <MenuItem value=\"IMAX12\">IMAX 12</MenuItem>\n                </Select>\n              </FormControl>\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 4\">\n              <TextField\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                label=\"Start Date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 12\">\n              <TextField\n                placeholder=\"http://drive.google.com/to/rental/folder\"\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <IconButton href=\"http://www.google.com\" target=\"_blank\">\n                      <OpenInNewIcon />\n                    </IconButton>\n                  ),\n                }}\n                value={googleDrive}\n                onChange={(e) => setGoogleDrive(e.target.value)}\n                label=\"GoogleDrive\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"4 / 10\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n                disabled={!title.trim() || !abbr.trim() || !googleDrive.trim()}\n                fullWidth\n              >{`Create ${title}`}</Button>\n            </InputWrapper>\n          </GridWrapper>\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}