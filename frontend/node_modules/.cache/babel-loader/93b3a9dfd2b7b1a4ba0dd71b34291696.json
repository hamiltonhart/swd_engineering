{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactFull.js\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT } from \"../../gql\";\nimport { makeStyles, Typography, Button, TextField, InputLabel, FormControl, Select } from \"@material-ui/core\";\nimport { Error } from \"../global\";\nimport { useToggle } from \"../../utils\";\nimport { SortedContactListCards } from \"./SortedContactListCards\";\nconst useStyles = makeStyles(theme => ({\n  heading: {},\n  detailBody: {\n    marginTop: theme.spacing(2),\n    width: \"100%\"\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"20% 80%\",\n    gridGap: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  label: {\n    color: theme.palette.grey[700],\n    fontSize: \".85em\",\n    alignSelf: \"baseline\",\n    justifySelf: \"stretch\"\n  },\n  submit: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\nexport const NewContactFull = ({\n  toggleNew,\n  setContactId\n}) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [createContact, {\n    error\n  }] = useMutation(CREATE_CONTACT);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        phoneNumber,\n        email,\n        notes\n      },\n      onCompleted: handleComplete()\n    });\n  };\n\n  const handleComplete = () => {\n    toggleNew();\n    setContactId(null);\n  };\n\n  const handleClose = () => {\n    toggleNew();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"left\",\n    variant: \"h4\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"New Contact\")), React.createElement(\"form\", {\n    className: classes.detailBody,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(TextField, {\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(TextField, {\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Company\"), React.createElement(TextField, {\n    value: company,\n    onChange: e => setCompany(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Title\"), React.createElement(TextField, {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(TextField, {\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TextField, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(TextField, {\n    multiline: true,\n    helperText: \"Can enter multiple lines.\",\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.cancelButton,\n    variant: \"outlined\",\n    color: \"secondary\",\n    size: \"medium\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Create\"))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactFull.js"],"names":["React","useState","useMutation","CREATE_CONTACT","makeStyles","Typography","Button","TextField","InputLabel","FormControl","Select","Error","useToggle","SortedContactListCards","useStyles","theme","heading","detailBody","marginTop","spacing","width","grid","display","gridTemplateColumns","gridGap","marginBottom","label","color","palette","grey","fontSize","alignSelf","justifySelf","submit","justifyContent","cancelButton","marginRight","NewContactFull","toggleNew","setContactId","firstName","setFirstName","lastName","setLastName","company","setCompany","title","setTitle","phoneNumber","setPhoneNumber","email","setEmail","notes","setNotes","createContact","error","handleSubmit","e","preventDefault","variables","onCompleted","handleComplete","handleClose","classes","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT } from \"../../gql\";\n\nimport {\n  makeStyles,\n  Typography,\n  Button,\n  TextField,\n  InputLabel,\n  FormControl,\n  Select,\n} from \"@material-ui/core\";\n\nimport { Error } from \"../global\";\n\nimport { useToggle } from \"../../utils\";\nimport { SortedContactListCards } from \"./SortedContactListCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {},\n  detailBody: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"20% 80%\",\n    gridGap: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  label: {\n    color: theme.palette.grey[700],\n    fontSize: \".85em\",\n    alignSelf: \"baseline\",\n    justifySelf: \"stretch\",\n  },\n  submit: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport const NewContactFull = ({ toggleNew, setContactId }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  const [createContact, { error }] = useMutation(CREATE_CONTACT);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        phoneNumber,\n        email,\n        notes,\n      },\n      onCompleted: handleComplete(),\n    });\n  };\n\n  const handleComplete = () => {\n    toggleNew();\n    setContactId(null);\n  };\n\n  const handleClose = () => {\n    toggleNew();\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      {error && <Error error={error} />}\n      <div className={classes.heading}>\n        <Typography align=\"left\" variant=\"h4\" color=\"primary\">\n          New Contact\n        </Typography>\n      </div>\n\n      <form className={classes.detailBody} onSubmit={(e) => handleSubmit(e)}>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            First Name\n          </Typography>\n          <TextField\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Last Name\n          </Typography>\n          <TextField\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Company\n          </Typography>\n          <TextField\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Title\n          </Typography>\n          <TextField value={title} onChange={(e) => setTitle(e.target.value)} />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Phone\n          </Typography>\n          <TextField\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Email\n          </Typography>\n          <TextField value={email} onChange={(e) => setEmail(e.target.value)} />\n        </div>\n\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Notes\n          </Typography>\n          <TextField\n            multiline\n            helperText=\"Can enter multiple lines.\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n          />\n        </div>\n        <div className={classes.submit}>\n          <Button\n            className={classes.cancelButton}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"medium\"\n            onClick={handleClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n          >\n            Create\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}