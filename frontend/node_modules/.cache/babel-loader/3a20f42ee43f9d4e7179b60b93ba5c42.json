{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useModal}from\"../../../../utils\";import{useMutation}from\"@apollo/react-hooks\";import{EDIT_RENTAL_NOTES}from\"../../../../gql\";import{Modal,ModalArea,ModalCloseIcon}from\"../../../utilities\";import{PageHeading}from\"../../../../styled/typography\";import{GridWrapper,InputWrapper}from\"../../../../styled/containers\";import{Error}from\"../../../global\";import{Button,TextField}from\"@material-ui/core\";export var EditNotesModal=function EditNotesModal(_ref){var currentNotes=_ref.currentNotes,projectId=_ref.projectId;var _useState=useState(currentNotes),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useModal=useModal(),isShowing=_useModal.isShowing,toggle=_useModal.toggle;var _useMutation=useMutation(EDIT_RENTAL_NOTES),_useMutation2=_slicedToArray(_useMutation,2),updateRentalProject=_useMutation2[0],error=_useMutation2[1].error;var handleSubmit=function handleSubmit(e){e.preventDefault();updateRentalProject({variables:{id:projectId,notes:notes},onCompleted:updateComplete()});};var updateComplete=function updateComplete(){toggle();};return React.createElement(React.Fragment,null,React.createElement(Button,{size:\"small\",color:\"secondary\",variant:\"contained\",onClick:function onClick(){return toggle();}},\"Edit Notes\"),React.createElement(Modal,{isShowing:isShowing},React.createElement(ModalArea,null,React.createElement(ModalCloseIcon,{toggle:toggle}),React.createElement(PageHeading,null,\"Edit Notes\"),React.createElement(GridWrapper,{as:\"form\",minWidth:\"622px;\",maxWidth:\"622px;\",margin:\"20px 0 0 0 \",onSubmit:function onSubmit(e){return handleSubmit(e);}},React.createElement(InputWrapper,{gridColumn:\"span 12\"},React.createElement(TextField,{variant:\"outlined\",fullWidth:true,multiline:true,rows:\"20\",value:notes,onChange:function onChange(e){return setNotes(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"4 / 10\"},React.createElement(Button,{type:\"submit\",size:\"large\",color:\"primary\",variant:\"contained\",fullWidth:true},\"Submit\"))),error&&React.createElement(Error,{error:error}))));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/EditNotesModal.js"],"names":["React","useState","useModal","useMutation","EDIT_RENTAL_NOTES","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","Error","Button","TextField","EditNotesModal","currentNotes","projectId","notes","setNotes","isShowing","toggle","updateRentalProject","error","handleSubmit","e","preventDefault","variables","id","onCompleted","updateComplete","target","value"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAEA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,iBAAT,KAAkC,iBAAlC,CAEA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,cAA3B,KAAiD,oBAAjD,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,+BAA1C,CACA,OAASC,KAAT,KAAsB,iBAAtB,CAEA,OAASC,MAAT,CAAiBC,SAAjB,KAAkC,mBAAlC,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAiC,IAA9BC,CAAAA,YAA8B,MAA9BA,YAA8B,CAAhBC,SAAgB,MAAhBA,SAAgB,eACnCf,QAAQ,CAACc,YAAD,CAD2B,wCACtDE,KADsD,eAC/CC,QAD+C,6BAG/BhB,QAAQ,EAHuB,CAGrDiB,SAHqD,WAGrDA,SAHqD,CAG1CC,MAH0C,WAG1CA,MAH0C,kBAKpBjB,WAAW,CAACC,iBAAD,CALS,8CAKtDiB,mBALsD,kBAK/BC,KAL+B,kBAK/BA,KAL+B,CAO7D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GACAJ,mBAAmB,CAAC,CAClBK,SAAS,CAAE,CAAEC,EAAE,CAAEX,SAAN,CAAiBC,KAAK,CAALA,KAAjB,CADO,CAElBW,WAAW,CAAEC,cAAc,EAFT,CAAD,CAAnB,CAID,CAND,CAQA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BT,MAAM,GACP,CAFD,CAIA,MACE,yCACE,oBAAC,MAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,WAFR,CAGE,OAAO,CAAC,WAHV,CAIE,OAAO,CAAE,yBAAMA,CAAAA,MAAM,EAAZ,EAJX,eADF,CAUE,oBAAC,KAAD,EAAO,SAAS,CAAED,SAAlB,EACE,oBAAC,SAAD,MACE,oBAAC,cAAD,EAAgB,MAAM,CAAEC,MAAxB,EADF,CAGE,oBAAC,WAAD,mBAHF,CAIE,oBAAC,WAAD,EACE,EAAE,CAAC,MADL,CAEE,QAAQ,CAAC,QAFX,CAGE,QAAQ,CAAC,QAHX,CAIE,MAAM,CAAC,aAJT,CAKE,QAAQ,CAAE,kBAAAI,CAAC,QAAID,CAAAA,YAAY,CAACC,CAAD,CAAhB,EALb,EAOE,oBAAC,YAAD,EAAc,UAAU,CAAC,SAAzB,EACE,oBAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,SAAS,KAFX,CAGE,SAAS,KAHX,CAIE,IAAI,CAAC,IAJP,CAKE,KAAK,CAAEP,KALT,CAME,QAAQ,CAAE,kBAAAO,CAAC,QAAIN,CAAAA,QAAQ,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAAZ,EANb,EADF,CAPF,CAiBE,oBAAC,YAAD,EAAc,UAAU,CAAC,QAAzB,EACE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,SAHR,CAIE,OAAO,CAAC,WAJV,CAKE,SAAS,KALX,WADF,CAjBF,CAJF,CA+BGT,KAAK,EAAI,oBAAC,KAAD,EAAO,KAAK,CAAEA,KAAd,EA/BZ,CADF,CAVF,CADF,CAgDD,CAnEM","sourcesContent":["import React, { useState } from \"react\";\nimport { useModal } from \"../../../../utils\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { EDIT_RENTAL_NOTES } from \"../../../../gql\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport { PageHeading } from \"../../../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../../../styled/containers\";\nimport { Error } from \"../../../global\";\n\nimport { Button, TextField } from \"@material-ui/core\";\n\nexport const EditNotesModal = ({ currentNotes, projectId }) => {\n  const [notes, setNotes] = useState(currentNotes);\n\n  const { isShowing, toggle } = useModal();\n\n  const [updateRentalProject, { error }] = useMutation(EDIT_RENTAL_NOTES);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateRentalProject({\n      variables: { id: projectId, notes },\n      onCompleted: updateComplete()\n    });\n  };\n\n  const updateComplete = () => {\n    toggle();\n  };\n\n  return (\n    <>\n      <Button\n        size=\"small\"\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => toggle()}\n      >\n        Edit Notes\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n\n          <PageHeading>Edit Notes</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={e => handleSubmit(e)}\n          >\n            <InputWrapper gridColumn=\"span 12\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                multiline\n                rows=\"20\"\n                value={notes}\n                onChange={e => setNotes(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"4 / 10\">\n              <Button\n                type=\"submit\"\n                size=\"large\"\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n              >{`Submit`}</Button>\n            </InputWrapper>\n          </GridWrapper>\n          {error && <Error error={error} />}\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}