{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactEdit.js\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_CONTACT } from \"../../gql\";\nimport { makeStyles, Typography, Button, TextField, InputLabel, FormControl, Select } from \"@material-ui/core\";\nimport { Error, Loading } from \"../global\";\nimport { ContactDeleteModal } from \"./ContactDeleteModal\";\nimport { useToggle } from \"../../utils\";\nconst useStyles = makeStyles(theme => ({\n  heading: {},\n  detailBody: {\n    marginTop: theme.spacing(2),\n    width: \"100%\"\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"20% 80%\",\n    gridGap: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  label: {\n    color: theme.palette.grey[700],\n    fontSize: \".85em\",\n    alignSelf: \"baseline\",\n    justifySelf: \"stretch\"\n  },\n  submit: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  deleteButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\nexport const ContactEdit = ({\n  contact,\n  setContactId,\n  toggleEdit\n}) => {\n  const [firstName, setFirstName] = useState(contact.firstName);\n  const [lastName, setLastName] = useState(contact.lastName);\n  const [company, setCompany] = useState(contact.company);\n  const [title, setTitle] = useState(contact.title);\n  const [phoneNumber, setPhoneNumber] = useState(contact.phoneNumber);\n  const [email, setEmail] = useState(contact.email);\n  const [notes, setNotes] = useState(contact.notes);\n  const [udpateContact, {\n    error\n  }] = useMutation(UPDATE_CONTACT);\n  const {\n    isShowing,\n    toggle\n  } = useToggle();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    udpateContact({\n      variables: {\n        id: contact.id,\n        firstName,\n        lastName,\n        company,\n        title,\n        phoneNumber,\n        email,\n        notes\n      },\n      onCompleted: handleComplete()\n    });\n  };\n\n  const handleComplete = () => {\n    toggleEdit();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: classes.detailBody,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(TextField, {\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(TextField, {\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Company\"), React.createElement(TextField, {\n    value: company,\n    onChange: e => setCompany(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Title\"), React.createElement(TextField, {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(TextField, {\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TextField, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.label,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(TextField, {\n    multiline: true,\n    helperText: \"Can enter multiple lines.\",\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.deleteButton,\n    variant: \"outlined\",\n    color: \"secondary\",\n    size: \"medium\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Confirm\"))), isShowing && React.createElement(ContactDeleteModal, {\n    contactId: contact.id,\n    contactName: `${contact.firstName} ${contact.lastName}`,\n    toggle: toggle,\n    setContactId: setContactId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactEdit.js"],"names":["React","useState","useMutation","UPDATE_CONTACT","makeStyles","Typography","Button","TextField","InputLabel","FormControl","Select","Error","Loading","ContactDeleteModal","useToggle","useStyles","theme","heading","detailBody","marginTop","spacing","width","grid","display","gridTemplateColumns","gridGap","marginBottom","label","color","palette","grey","fontSize","alignSelf","justifySelf","submit","justifyContent","deleteButton","marginRight","ContactEdit","contact","setContactId","toggleEdit","firstName","setFirstName","lastName","setLastName","company","setCompany","title","setTitle","phoneNumber","setPhoneNumber","email","setEmail","notes","setNotes","udpateContact","error","isShowing","toggle","handleSubmit","e","preventDefault","variables","id","onCompleted","handleComplete","classes","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_CONTACT } from \"../../gql\";\n\nimport {\n  makeStyles,\n  Typography,\n  Button,\n  TextField,\n  InputLabel,\n  FormControl,\n  Select,\n} from \"@material-ui/core\";\n\nimport { Error, Loading } from \"../global\";\nimport { ContactDeleteModal } from \"./ContactDeleteModal\";\n\nimport { useToggle } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {},\n  detailBody: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"20% 80%\",\n    gridGap: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  label: {\n    color: theme.palette.grey[700],\n    fontSize: \".85em\",\n    alignSelf: \"baseline\",\n    justifySelf: \"stretch\",\n  },\n  submit: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  deleteButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport const ContactEdit = ({ contact, setContactId, toggleEdit }) => {\n  const [firstName, setFirstName] = useState(contact.firstName);\n  const [lastName, setLastName] = useState(contact.lastName);\n  const [company, setCompany] = useState(contact.company);\n  const [title, setTitle] = useState(contact.title);\n  const [phoneNumber, setPhoneNumber] = useState(contact.phoneNumber);\n  const [email, setEmail] = useState(contact.email);\n  const [notes, setNotes] = useState(contact.notes);\n\n  const [udpateContact, { error }] = useMutation(UPDATE_CONTACT);\n\n  const { isShowing, toggle } = useToggle();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    udpateContact({\n      variables: {\n        id: contact.id,\n        firstName,\n        lastName,\n        company,\n        title,\n        phoneNumber,\n        email,\n        notes,\n      },\n      onCompleted: handleComplete(),\n    });\n  };\n\n  const handleComplete = () => {\n    toggleEdit();\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      {/* {loading && <Loading />}\n      {error && <Error error={error} />} */}\n\n      <form className={classes.detailBody} onSubmit={(e) => handleSubmit(e)}>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            First Name\n          </Typography>\n          <TextField\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Last Name\n          </Typography>\n          <TextField\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Company\n          </Typography>\n          <TextField\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Title\n          </Typography>\n          <TextField value={title} onChange={(e) => setTitle(e.target.value)} />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Phone\n          </Typography>\n          <TextField\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n          />\n        </div>\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Email\n          </Typography>\n          <TextField value={email} onChange={(e) => setEmail(e.target.value)} />\n        </div>\n\n        <div className={classes.grid}>\n          <Typography className={classes.label} align=\"right\">\n            Notes\n          </Typography>\n          <TextField\n            multiline\n            helperText=\"Can enter multiple lines.\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n          />\n        </div>\n        <div className={classes.submit}>\n          <Button\n            className={classes.deleteButton}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"medium\"\n            onClick={toggle}\n          >\n            Delete\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n          >\n            Confirm\n          </Button>\n        </div>\n      </form>\n      {isShowing && (\n        <ContactDeleteModal\n          contactId={contact.id}\n          contactName={`${contact.firstName} ${contact.lastName}`}\n          toggle={toggle}\n          setContactId={setContactId}\n        />\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}