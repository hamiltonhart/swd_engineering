{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/EditBasicInfo.js\";\nimport React, { useState } from \"react\";\nimport { useModal } from \"../../../../utils\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport { PageHeading } from \"../../../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../../../styled/containers\";\nimport { Error } from \"../../../global\";\nimport { makeStyles, Button, InputLabel, Select, MenuItem, IconButton, TextField, FormControl } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport { EDIT_BASIC_INFO } from \"../../../../gql\";\nimport { useMutation } from \"@apollo/react-hooks\";\nconst useStyles = makeStyles({\n  label: {\n    paddingLeft: \"12px\"\n  }\n});\nexport const EditBasicInfo = ({\n  project,\n  projectId\n}) => {\n  const [title, setTitle] = useState(project.title);\n  const [abbr, setAbbr] = useState(project.abbreviation);\n  const [driveUser, setDriveUser] = useState(project.driveUser || \"\");\n  const [drivePass, setDrivePass] = useState(project.drivePass || \"\");\n  const [msUser, setMsUser] = useState(project.msUser || \"\");\n  const [msPass, setMsPass] = useState(project.msPass || \"\");\n  const [googleDrive, setGoogleDrive] = useState(project.filesLink || \"\");\n  const [season, setSeason] = useState(project.season || \"\");\n  const [channelConfig, setChannelConfig] = useState(project.channelConfig);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [updateRentalProject, {\n    error\n  }] = useMutation(EDIT_BASIC_INFO);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await updateRentalProject({\n      variables: {\n        id: projectId,\n        title,\n        abbreviation: abbr,\n        driveUser: driveUser || \"n/a\",\n        drivePass: drivePass || \"n/a\",\n        msUser: msUser || \"n/a\",\n        msPass: msPass || \"n/a\",\n        filesLink: googleDrive,\n        season: season || 999,\n        channelConfig\n      }\n    });\n    console.log(res);\n    updateComplete(res);\n  };\n\n  const updateComplete = res => {\n    console.log(res);\n  };\n\n  const cancelToggle = () => {\n    setTitle(project.title);\n    setAbbr(project.abbreviation);\n    setDriveUser(project.driveUser);\n    setDrivePass(project.drivePass);\n    setMsUser(project.msUser);\n    setMsPass(project.MsPass);\n    setGoogleDrive(project.filesLink);\n    setSeason(project.season);\n    setChannelConfig(project.channelConfig);\n    toggle();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"outlined\",\n    size: \"small\",\n    onClick: e => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Edit Basic Info\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: cancelToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Edit Info\"), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"622px;\",\n    maxWidth: \"622px;\",\n    margin: \"20px 0 0 0 \",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"title-label\",\n    id: \"title-input\",\n    color: \"primary\",\n    label: \"Title\",\n    fullWidth: true,\n    required: true,\n    placeholder: \"Star Wars\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"season-label\",\n    id: \"season-input\",\n    placeholder: \"1\",\n    label: \"Season\",\n    value: season,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => setSeason(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"config-label\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Select, {\n    labelId: \"config-label\",\n    id: \"config-input\",\n    color: \"primary\",\n    label: \"Config\",\n    fullWidth: true,\n    required: true,\n    value: channelConfig,\n    onChange: e => setChannelConfig(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"ST\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Stereo\"), React.createElement(MenuItem, {\n    value: \"5.1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"5.1\"), React.createElement(MenuItem, {\n    value: \"7.1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"7.1\"), React.createElement(MenuItem, {\n    value: \"ATMOS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"ATMOS\"), React.createElement(MenuItem, {\n    value: \"DTS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"DTS\"), React.createElement(MenuItem, {\n    value: \"IMAX 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"IMAX 6\"), React.createElement(MenuItem, {\n    value: \"IMAX 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"IMAX 12\")))), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    gridRow: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"abbr-label\",\n    id: \"abbr-input\",\n    color: \"primary\",\n    label: \"Abbreviation\",\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    placeholder: \"starwars \",\n    value: abbr,\n    onChange: e => setAbbr(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    gridRow: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"drive-user-label\",\n    id: \"drive-user-input\",\n    color: \"primary\",\n    label: \"Drive Username\",\n    fullWidth: true,\n    placeholder: \"starwars\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: driveUser,\n    onChange: e => setDriveUser(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    gridRow: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"drive-pass-label\",\n    id: \"drive-pass-input\",\n    color: \"primary\",\n    label: \"Drive Password\",\n    fullWidth: true,\n    placeholder: \"starwars\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: drivePass,\n    onChange: e => setDrivePass(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    gridRow: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"ms-user-label\",\n    id: \"ms-user-input\",\n    color: \"primary\",\n    label: \"MS Username\",\n    fullWidth: true,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    placeholder: \"starwars \",\n    value: msUser,\n    onChange: e => setMsUser(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    gridRow: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"ms-pass-label\",\n    id: \"ms-pass-input\",\n    color: \"primary\",\n    label: \"MS Password\",\n    fullWidth: true,\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    placeholder: \"starwars \",\n    value: msPass,\n    onChange: e => setMsPass(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    labelId: \"files-link-label\",\n    id: \"files-link-input\",\n    placeholder: \"http://drive.google.com/to/rental/folder\",\n    label: \"GoogleDrive\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    endAdornment: React.createElement(IconButton, {\n      href: \"http://www.google.com\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(OpenInNewIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })),\n    required: true,\n    value: googleDrive,\n    onChange: e => setGoogleDrive(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"large\",\n    disabled: !title.trim() || !abbr.trim() || !googleDrive.trim(),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, `Confirm ${title}`))), error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/EditBasicInfo.js"],"names":["React","useState","useModal","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","Error","makeStyles","Button","InputLabel","Select","MenuItem","IconButton","TextField","FormControl","OpenInNewIcon","EDIT_BASIC_INFO","useMutation","useStyles","label","paddingLeft","EditBasicInfo","project","projectId","title","setTitle","abbr","setAbbr","abbreviation","driveUser","setDriveUser","drivePass","setDrivePass","msUser","setMsUser","msPass","setMsPass","googleDrive","setGoogleDrive","filesLink","season","setSeason","channelConfig","setChannelConfig","isShowing","toggle","updateRentalProject","error","handleSubmit","e","preventDefault","res","variables","id","console","log","updateComplete","cancelToggle","MsPass","classes","shrink","target","value","trim"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useModal } from \"../../../../utils\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport { PageHeading } from \"../../../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../../../styled/containers\";\nimport { Error } from \"../../../global\";\n\nimport {\n  makeStyles,\n  Button,\n  InputLabel,\n  Select,\n  MenuItem,\n  IconButton,\n  TextField,\n  FormControl,\n} from \"@material-ui/core\";\n\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nimport { EDIT_BASIC_INFO } from \"../../../../gql\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles({\n  label: {\n    paddingLeft: \"12px\",\n  },\n});\n\nexport const EditBasicInfo = ({ project, projectId }) => {\n  const [title, setTitle] = useState(project.title);\n  const [abbr, setAbbr] = useState(project.abbreviation);\n  const [driveUser, setDriveUser] = useState(project.driveUser || \"\");\n  const [drivePass, setDrivePass] = useState(project.drivePass || \"\");\n  const [msUser, setMsUser] = useState(project.msUser || \"\");\n  const [msPass, setMsPass] = useState(project.msPass || \"\");\n  const [googleDrive, setGoogleDrive] = useState(project.filesLink || \"\");\n  const [season, setSeason] = useState(project.season || \"\");\n  const [channelConfig, setChannelConfig] = useState(project.channelConfig);\n\n  const { isShowing, toggle } = useModal();\n\n  const [updateRentalProject, { error }] = useMutation(EDIT_BASIC_INFO);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await updateRentalProject({\n      variables: {\n        id: projectId,\n        title,\n        abbreviation: abbr,\n        driveUser: driveUser || \"n/a\",\n        drivePass: drivePass || \"n/a\",\n        msUser: msUser || \"n/a\",\n        msPass: msPass || \"n/a\",\n        filesLink: googleDrive,\n        season: season || 999,\n        channelConfig,\n      },\n    });\n    console.log(res);\n    updateComplete(res);\n  };\n\n  const updateComplete = (res) => {\n    console.log(res);\n  };\n\n  const cancelToggle = () => {\n    setTitle(project.title);\n    setAbbr(project.abbreviation);\n    setDriveUser(project.driveUser);\n    setDrivePass(project.drivePass);\n    setMsUser(project.msUser);\n    setMsPass(project.MsPass);\n    setGoogleDrive(project.filesLink);\n    setSeason(project.season);\n    setChannelConfig(project.channelConfig);\n    toggle();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button\n        color=\"secondary\"\n        variant=\"outlined\"\n        size=\"small\"\n        onClick={(e) => toggle()}\n      >\n        Edit Basic Info\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={cancelToggle} />\n\n          <PageHeading>Edit Info</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={(e) => handleSubmit(e)}\n          >\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                labelId=\"title-label\"\n                id=\"title-input\"\n                color=\"primary\"\n                label=\"Title\"\n                fullWidth\n                required\n                placeholder=\"Star Wars\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 2\">\n              <TextField\n                labelId=\"season-label\"\n                id=\"season-input\"\n                placeholder=\"1\"\n                label=\"Season\"\n                value={season}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(e) => setSeason(e.target.value)}\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 3\">\n              <FormControl fullWidth variant=\"outlined\">\n                <InputLabel id=\"config-label\" required>\n                  Config\n                </InputLabel>\n                <Select\n                  labelId=\"config-label\"\n                  id=\"config-input\"\n                  color=\"primary\"\n                  label=\"Config\"\n                  fullWidth\n                  required\n                  value={channelConfig}\n                  onChange={(e) => setChannelConfig(e.target.value)}\n                >\n                  <MenuItem value=\"ST\">Stereo</MenuItem>\n                  <MenuItem value=\"5.1\">5.1</MenuItem>\n                  <MenuItem value=\"7.1\">7.1</MenuItem>\n                  <MenuItem value=\"ATMOS\">ATMOS</MenuItem>\n                  <MenuItem value=\"DTS\">DTS</MenuItem>\n                  <MenuItem value=\"IMAX 6\">IMAX 6</MenuItem>\n                  <MenuItem value=\"IMAX 12\">IMAX 12</MenuItem>\n                </Select>\n              </FormControl>\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 4\" gridRow=\"2\">\n              <TextField\n                labelId=\"abbr-label\"\n                id=\"abbr-input\"\n                color=\"primary\"\n                label=\"Abbreviation\"\n                fullWidth\n                required\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder=\"starwars \"\n                value={abbr}\n                onChange={(e) => setAbbr(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\" gridRow=\"3\">\n              <TextField\n                labelId=\"drive-user-label\"\n                id=\"drive-user-input\"\n                color=\"primary\"\n                label=\"Drive Username\"\n                fullWidth\n                placeholder=\"starwars\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={driveUser}\n                onChange={(e) => setDriveUser(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\" gridRow=\"3\">\n              <TextField\n                labelId=\"drive-pass-label\"\n                id=\"drive-pass-input\"\n                color=\"primary\"\n                label=\"Drive Password\"\n                fullWidth\n                placeholder=\"starwars\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={drivePass}\n                onChange={(e) => setDrivePass(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\" gridRow=\"4\">\n              <TextField\n                labelId=\"ms-user-label\"\n                id=\"ms-user-input\"\n                color=\"primary\"\n                label=\"MS Username\"\n                fullWidth\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder=\"starwars \"\n                value={msUser}\n                onChange={(e) => setMsUser(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\" gridRow=\"4\">\n              <TextField\n                labelId=\"ms-pass-label\"\n                id=\"ms-pass-input\"\n                color=\"primary\"\n                label=\"MS Password\"\n                fullWidth\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder=\"starwars \"\n                value={msPass}\n                onChange={(e) => setMsPass(e.target.value)}\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"span 12\">\n              <TextField\n                labelId=\"files-link-label\"\n                id=\"files-link-input\"\n                placeholder=\"http://drive.google.com/to/rental/folder\"\n                label=\"GoogleDrive\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                fullWidth\n                endAdornment={\n                  <IconButton href=\"http://www.google.com\" target=\"_blank\">\n                    <OpenInNewIcon />\n                  </IconButton>\n                }\n                required\n                value={googleDrive}\n                onChange={(e) => setGoogleDrive(e.target.value)}\n              />\n            </InputWrapper>\n\n            <InputWrapper gridColumn=\"4 / 10\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n                disabled={!title.trim() || !abbr.trim() || !googleDrive.trim()}\n                fullWidth\n              >{`Confirm ${title}`}</Button>\n            </InputWrapper>\n          </GridWrapper>\n          {error && <Error error={error} />}\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}