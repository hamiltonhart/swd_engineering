{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/DeleteDriveIcon.js\";\nimport React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { DELETE_DRIVE, ALL_DRIVES_QUERY } from \"../../gql\";\nimport { makeStyles, IconButton, Typography, Button } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { Modal, ModalContent } from \"../global/Modal\";\nimport { Error } from \"../global\";\nimport { useToggle } from \"../../utils\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4)\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    marginTop: theme.spacing(2)\n  }\n}));\nexport const DeleteDriveIcon = ({\n  drive\n}) => {\n  const {\n    isShowing,\n    toggle\n  } = useToggle();\n  const [deleteDrive, {\n    error\n  }] = useMutation(DELETE_DRIVE);\n\n  const handleDelete = e => {\n    e.preventDefault(); // deleteDrive({\n    //   variables: { id: drive.id },\n    //   refetchQueries: [{ query: ALL_DRIVES_QUERY }],\n    //   onCompleted: { toggle },\n    // });\n\n    console.log(drive.id);\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(DeleteForeverIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), isShowing && React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ModalContent, {\n    toggle: toggle,\n    closeIcon: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"This action cannot be undone.\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, `Are you sure you want to delete Drive #${drive.driveNumber}?`), React.createElement(\"div\", {\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: e => handleDelete(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Delete\"))))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/DeleteDriveIcon.js"],"names":["React","useMutation","DELETE_DRIVE","ALL_DRIVES_QUERY","makeStyles","IconButton","Typography","Button","DeleteForeverIcon","Modal","ModalContent","Error","useToggle","useStyles","theme","root","display","flexDirection","alignItems","padding","spacing","buttons","justifyContent","width","marginTop","DeleteDriveIcon","drive","isShowing","toggle","deleteDrive","error","handleDelete","e","preventDefault","console","log","id","classes","driveNumber"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { DELETE_DRIVE, ALL_DRIVES_QUERY } from \"../../gql\";\n\nimport { makeStyles, IconButton, Typography, Button } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport { Modal, ModalContent } from \"../global/Modal\";\nimport { Error } from \"../global\";\nimport { useToggle } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n  },\n}));\nexport const DeleteDriveIcon = ({ drive }) => {\n  const { isShowing, toggle } = useToggle();\n\n  const [deleteDrive, { error }] = useMutation(DELETE_DRIVE);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    // deleteDrive({\n    //   variables: { id: drive.id },\n    //   refetchQueries: [{ query: ALL_DRIVES_QUERY }],\n    //   onCompleted: { toggle },\n    // });\n    console.log(drive.id);\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      {error && <Error error={error} />}\n      <IconButton onClick={toggle}>\n        <DeleteForeverIcon />\n      </IconButton>\n      {isShowing && (\n        <Modal>\n          <ModalContent toggle={toggle} closeIcon={false}>\n            <div className={classes.root}>\n              <Typography variant=\"h5\" gutterBottom>\n                This action cannot be undone.\n              </Typography>\n              <Typography>{`Are you sure you want to delete Drive #${drive.driveNumber}?`}</Typography>\n              <div className={classes.buttons}>\n                <Button variant=\"outlined\" onClick={toggle}>\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={(e) => handleDelete(e)}\n                >\n                  Delete\n                </Button>\n              </div>\n            </div>\n          </ModalContent>\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}