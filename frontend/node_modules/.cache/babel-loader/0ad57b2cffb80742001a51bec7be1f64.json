{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useQuery}from\"@apollo/react-hooks\";import{ALL_CONTACTS_QUERY}from\"../gql\";import{makeStyles,InputLabel,MenuItem,Select,OutlinedInput}from\"@material-ui/core\";import SearchIcon from\"@material-ui/icons/Search\";import{MainWrapper,PageHeadingWrapper,FlexWrapper,InputWrapper}from\"../styled/containers\";import{PageHeading}from\"../styled/typography\";import{NewContactModal,SortedContactListCards}from\"../components/Contacts\";var useStyles=makeStyles({select:{minWidth:\"212px\"},label:{paddingLeft:\"12px\"},search:{}});var ContactsListPage=function ContactsListPage(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var _useState3=useState(\"first-name\"),_useState4=_slicedToArray(_useState3,2),sortValue=_useState4[0],setSortValue=_useState4[1];var _useQuery=useQuery(ALL_CONTACTS_QUERY),data=_useQuery.data,loading=_useQuery.loading,error=_useQuery.error;var classes=useStyles();return React.createElement(MainWrapper,null,loading&&React.createElement(\"h1\",null,\"Loading...\"),error&&React.createElement(\"h1\",null,error.message),data&&React.createElement(React.Fragment,null,React.createElement(PageHeadingWrapper,null,React.createElement(PageHeading,null,\"Contacts\")),React.createElement(FlexWrapper,{justifyContent:\"space-between\"},React.createElement(InputWrapper,{width:\"none\"},React.createElement(InputLabel,{className:classes.label,id:\"contact-filter-label\"},\"Sorting\"),React.createElement(Select,{labelId:\"contact-filter-label\",id:\"contact-filter-select\",className:classes.select,defaultValue:sortValue,color:\"primary\",variant:\"outlined\",onChange:function onChange(e){return setSortValue(e.target.value);}},React.createElement(MenuItem,{value:\"first-name\"},\"First Name\"),React.createElement(MenuItem,{value:\"last-name\"},\"Last Name\"))),React.createElement(InputWrapper,{width:\"auto\"},React.createElement(InputLabel,{className:classes.label},\"Search\"),React.createElement(OutlinedInput,{placeholder:\"First, Last, Company, Title\",value:searchValue,label:\"Search\",color:\"primary\",notched:false,endAdornment:React.createElement(SearchIcon,null),variant:\"outlined\",onChange:function onChange(e){return setSearchValue(e.target.value);}}))),React.createElement(SortedContactListCards,{contacts:data.contacts,sortBy:sortValue}),React.createElement(NewContactModal,{roundButton:true})));};export default ContactsListPage;","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/pages/ContactsListPage.js"],"names":["React","useState","useQuery","ALL_CONTACTS_QUERY","makeStyles","InputLabel","MenuItem","Select","OutlinedInput","SearchIcon","MainWrapper","PageHeadingWrapper","FlexWrapper","InputWrapper","PageHeading","NewContactModal","SortedContactListCards","useStyles","select","minWidth","label","paddingLeft","search","ContactsListPage","searchValue","setSearchValue","sortValue","setSortValue","data","loading","error","classes","message","e","target","value","contacts"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,qBAAzB,CAEA,OAASC,kBAAT,KAAmC,QAAnC,CAEA,OACEC,UADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,MAJF,CAKEC,aALF,KAMO,mBANP,CAQA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CAEA,OACEC,WADF,CAEEC,kBAFF,CAGEC,WAHF,CAIEC,YAJF,KAKO,sBALP,CAMA,OAASC,WAAT,KAA4B,sBAA5B,CAEA,OACEC,eADF,CAEEC,sBAFF,KAGO,wBAHP,CAKA,GAAMC,CAAAA,SAAS,CAAGb,UAAU,CAAC,CAC3Bc,MAAM,CAAE,CACNC,QAAQ,CAAE,OADJ,CADmB,CAI3BC,KAAK,CAAE,CACLC,WAAW,CAAE,MADR,CAJoB,CAO3BC,MAAM,CAAE,EAPmB,CAAD,CAA5B,CAUA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,eACStB,QAAQ,CAAC,EAAD,CADjB,wCACtBuB,WADsB,eACTC,cADS,8BAEKxB,QAAQ,CAAC,YAAD,CAFb,yCAEtByB,SAFsB,eAEXC,YAFW,6BAIIzB,QAAQ,CAACC,kBAAD,CAJZ,CAIrByB,IAJqB,WAIrBA,IAJqB,CAIfC,OAJe,WAIfA,OAJe,CAINC,KAJM,WAINA,KAJM,CAM7B,GAAMC,CAAAA,OAAO,CAAGd,SAAS,EAAzB,CAEA,MACE,qBAAC,WAAD,MACGY,OAAO,EAAI,2CADd,CAEGC,KAAK,EAAI,8BAAKA,KAAK,CAACE,OAAX,CAFZ,CAGGJ,IAAI,EACH,wCACE,oBAAC,kBAAD,MACE,oBAAC,WAAD,iBADF,CADF,CAKE,oBAAC,WAAD,EAAa,cAAc,CAAC,eAA5B,EACE,oBAAC,YAAD,EAAc,KAAK,CAAC,MAApB,EACE,oBAAC,UAAD,EAAY,SAAS,CAAEG,OAAO,CAACX,KAA/B,CAAsC,EAAE,CAAC,sBAAzC,YADF,CAIE,oBAAC,MAAD,EACE,OAAO,CAAC,sBADV,CAEE,EAAE,CAAC,uBAFL,CAGE,SAAS,CAAEW,OAAO,CAACb,MAHrB,CAIE,YAAY,CAAEQ,SAJhB,CAKE,KAAK,CAAC,SALR,CAME,OAAO,CAAC,UANV,CAOE,QAAQ,CAAE,kBAAAO,CAAC,QAAIN,CAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,EAPb,EASE,oBAAC,QAAD,EAAU,KAAK,CAAC,YAAhB,eATF,CAUE,oBAAC,QAAD,EAAU,KAAK,CAAC,WAAhB,cAVF,CAJF,CADF,CAmBE,oBAAC,YAAD,EAAc,KAAK,CAAC,MAApB,EACE,oBAAC,UAAD,EAAY,SAAS,CAAEJ,OAAO,CAACX,KAA/B,WADF,CAEE,oBAAC,aAAD,EACE,WAAW,CAAC,6BADd,CAEE,KAAK,CAAEI,WAFT,CAGE,KAAK,CAAC,QAHR,CAIE,KAAK,CAAC,SAJR,CAKE,OAAO,CAAE,KALX,CAME,YAAY,CAAE,oBAAC,UAAD,MANhB,CAOE,OAAO,CAAC,UAPV,CAQE,QAAQ,CAAE,kBAAAS,CAAC,QAAIR,CAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EARb,EAFF,CAnBF,CALF,CAuCE,oBAAC,sBAAD,EAAwB,QAAQ,CAAEP,IAAI,CAACQ,QAAvC,CAAiD,MAAM,CAAEV,SAAzD,EAvCF,CAyCE,oBAAC,eAAD,EAAiB,WAAW,KAA5B,EAzCF,CAJJ,CADF,CAmDD,CA3DD,CA6DA,cAAeH,CAAAA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { ALL_CONTACTS_QUERY } from \"../gql\";\n\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  Select,\n  OutlinedInput\n} from \"@material-ui/core\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport {\n  MainWrapper,\n  PageHeadingWrapper,\n  FlexWrapper,\n  InputWrapper\n} from \"../styled/containers\";\nimport { PageHeading } from \"../styled/typography\";\n\nimport {\n  NewContactModal,\n  SortedContactListCards\n} from \"../components/Contacts\";\n\nconst useStyles = makeStyles({\n  select: {\n    minWidth: \"212px\"\n  },\n  label: {\n    paddingLeft: \"12px\"\n  },\n  search: {}\n});\n\nconst ContactsListPage = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [sortValue, setSortValue] = useState(\"first-name\");\n\n  const { data, loading, error } = useQuery(ALL_CONTACTS_QUERY);\n\n  const classes = useStyles();\n\n  return (\n    <MainWrapper>\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>{error.message}</h1>}\n      {data && (\n        <>\n          <PageHeadingWrapper>\n            <PageHeading>Contacts</PageHeading>\n          </PageHeadingWrapper>\n\n          <FlexWrapper justifyContent=\"space-between\">\n            <InputWrapper width=\"none\">\n              <InputLabel className={classes.label} id=\"contact-filter-label\">\n                Sorting\n              </InputLabel>\n              <Select\n                labelId=\"contact-filter-label\"\n                id=\"contact-filter-select\"\n                className={classes.select}\n                defaultValue={sortValue}\n                color=\"primary\"\n                variant=\"outlined\"\n                onChange={e => setSortValue(e.target.value)}\n              >\n                <MenuItem value=\"first-name\">First Name</MenuItem>\n                <MenuItem value=\"last-name\">Last Name</MenuItem>\n              </Select>\n            </InputWrapper>\n\n            <InputWrapper width=\"auto\">\n              <InputLabel className={classes.label}>Search</InputLabel>\n              <OutlinedInput\n                placeholder=\"First, Last, Company, Title\"\n                value={searchValue}\n                label=\"Search\"\n                color=\"primary\"\n                notched={false}\n                endAdornment={<SearchIcon />}\n                variant=\"outlined\"\n                onChange={e => setSearchValue(e.target.value)}\n              />\n            </InputWrapper>\n          </FlexWrapper>\n\n          <SortedContactListCards contacts={data.contacts} sortBy={sortValue} />\n\n          <NewContactModal roundButton />\n        </>\n      )}\n    </MainWrapper>\n  );\n};\n\nexport default ContactsListPage;\n"]},"metadata":{},"sourceType":"module"}