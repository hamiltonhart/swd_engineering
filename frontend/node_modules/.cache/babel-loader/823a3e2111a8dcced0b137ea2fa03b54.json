{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/pages/DrivesListPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_DRIVES_QUERY } from \"../gql\";\nimport { makeStyles, InputLabel, MenuItem, Select, OutlinedInput, TextField, Grid, Typography } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { MainWrapper, PageHeadingWrapper, FlexWrapper, InputWrapper } from \"../styled/containers\";\nimport { PageHeading } from \"../styled/typography\";\nimport { DriveListInfo } from \"../components/Drives\";\nimport { Label } from \"../styled/forms\";\nimport { Icon } from \"../styled/icons\";\nimport { NewDriveModal } from \"../components/Drives\";\nconst useStyles = makeStyles({\n  select: {\n    minWidth: \"212px\"\n  },\n  label: {\n    paddingLeft: \"12px\"\n  },\n  cardActionHeading: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    margin: \"20px 10px\"\n  },\n  search: {},\n  tempGrid: {\n    border: \"1px solid black\",\n    padding: \"16px\"\n  },\n  tempText: {\n    border: \"1px solid black\"\n  }\n});\n\nconst DrivesListPage = () => {\n  const [filterValue, setFilterValue] = useState(\"available\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_DRIVES_QUERY);\n  const classes = useStyles();\n  return React.createElement(MainWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(PageHeadingWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Drives\")), React.createElement(\"div\", {\n    className: classes.cardActionHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(NewDriveModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(FlexWrapper, {\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    width: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: classes.label,\n    id: \"drive-filter-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Sorting\"), React.createElement(Select, {\n    labelId: \"drive-filter-label\",\n    id: \"drive-filter-select\",\n    className: classes.select,\n    value: filterValue,\n    color: \"primary\",\n    variant: \"outlined\",\n    onChange: e => setFilterValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"All\"), React.createElement(MenuItem, {\n    value: \"available\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Available\"), React.createElement(MenuItem, {\n    value: \"unavailable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Unavailable\"))), React.createElement(InputWrapper, {\n    width: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Search\"), React.createElement(OutlinedInput, {\n    placeholder: \"Number or Rental\",\n    value: searchValue,\n    label: \"Search\",\n    color: \"primary\",\n    notched: false,\n    endAdornment: React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    variant: \"outlined\",\n    onChange: e => setSearchValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), loading && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Loading...\"), error && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, error.message), data && React.createElement(React.Fragment, null, React.createElement(DriveListInfo, {\n    drives: data.drives,\n    filterValue: filterValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    className: classes.tempGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.tempText,\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Some Text\"))));\n};\n\nexport default DrivesListPage;\n{\n  /* <Icon\n  position=\"absolute\"\n  top=\"45%\"\n  right=\"10%\"\n  svgWidth=\"20px\"\n  cursor=\"pointer\"\n  >\n  <SearchIcon />\n  </Icon>; */\n}","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/pages/DrivesListPage.js"],"names":["React","useState","useEffect","useQuery","ALL_DRIVES_QUERY","makeStyles","InputLabel","MenuItem","Select","OutlinedInput","TextField","Grid","Typography","SearchIcon","MainWrapper","PageHeadingWrapper","FlexWrapper","InputWrapper","PageHeading","DriveListInfo","Label","Icon","NewDriveModal","useStyles","select","minWidth","label","paddingLeft","cardActionHeading","display","justifyContent","margin","search","tempGrid","border","padding","tempText","DrivesListPage","filterValue","setFilterValue","searchValue","setSearchValue","data","loading","error","classes","e","target","value","message","drives"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_DRIVES_QUERY } from \"../gql\";\n\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  Select,\n  OutlinedInput,\n  TextField,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport {\n  MainWrapper,\n  PageHeadingWrapper,\n  FlexWrapper,\n  InputWrapper,\n} from \"../styled/containers\";\nimport { PageHeading } from \"../styled/typography\";\nimport { DriveListInfo } from \"../components/Drives\";\nimport { Label } from \"../styled/forms\";\nimport { Icon } from \"../styled/icons\";\nimport { NewDriveModal } from \"../components/Drives\";\n\nconst useStyles = makeStyles({\n  select: {\n    minWidth: \"212px\",\n  },\n  label: {\n    paddingLeft: \"12px\",\n  },\n  cardActionHeading: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    margin: \"20px 10px\",\n  },\n  search: {},\n  tempGrid: {\n    border: \"1px solid black\",\n    padding: \"16px\",\n  },\n  tempText: {\n    border: \"1px solid black\",\n  },\n});\n\nconst DrivesListPage = () => {\n  const [filterValue, setFilterValue] = useState(\"available\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const { data, loading, error } = useQuery(ALL_DRIVES_QUERY);\n\n  const classes = useStyles();\n\n  return (\n    <MainWrapper>\n      <PageHeadingWrapper>\n        <PageHeading>Drives</PageHeading>\n      </PageHeadingWrapper>\n      <div className={classes.cardActionHeading}>\n        <NewDriveModal />\n      </div>\n\n      <FlexWrapper justifyContent=\"space-between\" alignItems=\"flex-end\">\n        <InputWrapper width=\"none\">\n          <InputLabel className={classes.label} id=\"drive-filter-label\">\n            Sorting\n          </InputLabel>\n          <Select\n            labelId=\"drive-filter-label\"\n            id=\"drive-filter-select\"\n            className={classes.select}\n            value={filterValue}\n            color=\"primary\"\n            variant=\"outlined\"\n            onChange={(e) => setFilterValue(e.target.value)}\n          >\n            <MenuItem value=\"all\">All</MenuItem>\n            <MenuItem value=\"available\">Available</MenuItem>\n            <MenuItem value=\"unavailable\">Unavailable</MenuItem>\n          </Select>\n        </InputWrapper>\n\n        <InputWrapper width=\"auto\">\n          <InputLabel className={classes.label}>Search</InputLabel>\n          <OutlinedInput\n            placeholder=\"Number or Rental\"\n            value={searchValue}\n            label=\"Search\"\n            color=\"primary\"\n            notched={false}\n            endAdornment={<SearchIcon />}\n            variant=\"outlined\"\n            onChange={(e) => setSearchValue(e.target.value)}\n          />\n        </InputWrapper>\n      </FlexWrapper>\n\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>{error.message}</h1>}\n      {data && (\n        <>\n          <DriveListInfo drives={data.drives} filterValue={filterValue} />\n        </>\n      )}\n      <Grid container className={classes.tempGrid}>\n        <Grid item xs={4}>\n          <Typography className={classes.tempText} variant=\"h3\">\n            Some Text\n          </Typography>\n        </Grid>\n      </Grid>\n    </MainWrapper>\n  );\n};\n\nexport default DrivesListPage;\n\n{\n  /* <Icon\n  position=\"absolute\"\n  top=\"45%\"\n  right=\"10%\"\n  svgWidth=\"20px\"\n  cursor=\"pointer\"\n>\n  <SearchIcon />\n</Icon>; */\n}\n"]},"metadata":{},"sourceType":"module"}