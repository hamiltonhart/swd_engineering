{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactModal.js\";\nimport React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useModal } from \"../../utils\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT, ALL_CONTACTS_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\nimport { makeStyles, Button, TextField, InputLabel, Select, MenuItem, FormControl } from \"@material-ui/core\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Input, Label, Textarea, Required } from \"../../styled/forms\";\nimport { RedButton, InactiveButton } from \"../../styled/buttons\";\nimport { Error } from \"../global\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\nexport const NewContactModal = ({\n  redButton,\n  roundButton,\n  blackButton\n}) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [createContact, {\n    error\n  }] = useMutation(CREATE_CONTACT);\n\n  const formSubmit = (e, firstName, lastName, company, title, phone, email, notes) => {\n    e.preventDefault();\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        email,\n        notes,\n        phoneNumber: phone\n      },\n      refetchQueries: [{\n        query: ALL_CONTACTS_QUERY\n      }, {\n        query: HOME_PAGE_QUERY,\n        variables: {\n          limit: 8,\n          reverse: true\n        }\n      }],\n      onCompleted: createCompleted()\n    });\n  };\n\n  const createCompleted = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setCompany(\"\");\n    setTitle(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    toggle();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    className: classes.button,\n    size: \"medium\",\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"New Contact\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"New Contact\"), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"622px;\",\n    maxWidth: \"622px;\",\n    margin: \"20px 0 0 0 \",\n    onSubmit: e => formSubmit(e, firstName, lastName, company, title, phone, email, notes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"First Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Last Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Company\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    value: company,\n    onChange: e => setCompany(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Title\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    gridColumn: \"span 2\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"country-input-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Select, {\n    label: \"Country\",\n    labelId: \"country-input-label\",\n    defaultValue: \"US\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"US\",\n    default: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"US\"), React.createElement(MenuItem, {\n    value: \"UK\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"UK\"), React.createElement(MenuItem, {\n    value: \"CA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"CA\")))), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"PhoneNumber\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Email\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Notes\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    multiline: true,\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    size: \"large\",\n    fullWidth: true,\n    inactive: !!firstName || !!lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Create Contact\"), firstName && lastName ? React.createElement(RedButton, {\n    minWidth: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, `Create ${firstName}`) : React.createElement(InactiveButton, {\n    minWidth: \"100%\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Create Contact\"))), error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, error.message))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactModal.js"],"names":["React","useState","InputMask","useModal","useMutation","CREATE_CONTACT","ALL_CONTACTS_QUERY","HOME_PAGE_QUERY","makeStyles","Button","TextField","InputLabel","Select","MenuItem","FormControl","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","Input","Label","Textarea","Required","RedButton","InactiveButton","Error","useStyles","theme","button","fontWeight","typography","fontWeightBold","NewContactModal","redButton","roundButton","blackButton","firstName","setFirstName","lastName","setLastName","company","setCompany","title","setTitle","phone","setPhone","email","setEmail","notes","setNotes","isShowing","toggle","createContact","error","formSubmit","e","preventDefault","variables","phoneNumber","refetchQueries","query","limit","reverse","onCompleted","createCompleted","classes","shrink","target","value","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,cAAT,EAAyBC,kBAAzB,EAA6CC,eAA7C,QAAoE,WAApE;AAEA,SACEC,UADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,WAPF,QAQO,mBARP;AAUA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,cAA3B,QAAiD,cAAjD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,yBAA1C;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,QAAjC,QAAiD,oBAAjD;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,sBAA1C;AACA,SAASC,KAAT,QAAsB,WAAtB;AAEA,MAAMC,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAEF,KAAK,CAACG,UAAN,CAAiBC;AADvB;AAD+B,CAAZ,CAAD,CAA5B;AAMA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA;AAA1B,CAAD,KAA6C;AAC1E,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuC,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2C,KAAD,EAAQC,QAAR,IAAoB5C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC6C,KAAD,EAAQC,QAAR,IAAoB9C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+C,KAAD,EAAQC,QAAR,IAAoBhD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiD,KAAD,EAAQC,QAAR,IAAoBlD,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEmD,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBlD,QAAQ,EAAtC;AAEA,QAAM,CAACmD,aAAD,EAAgB;AAAEC,IAAAA;AAAF,GAAhB,IAA6BnD,WAAW,CAACC,cAAD,CAA9C;;AAEA,QAAMmD,UAAU,GAAG,CACjBC,CADiB,EAEjBnB,SAFiB,EAGjBE,QAHiB,EAIjBE,OAJiB,EAKjBE,KALiB,EAMjBE,KANiB,EAOjBE,KAPiB,EAQjBE,KARiB,KASd;AACHO,IAAAA,CAAC,CAACC,cAAF;AAEAJ,IAAAA,aAAa,CAAC;AACZK,MAAAA,SAAS,EAAE;AACTrB,QAAAA,SADS;AAETE,QAAAA,QAFS;AAGTE,QAAAA,OAHS;AAITE,QAAAA,KAJS;AAKTI,QAAAA,KALS;AAMTE,QAAAA,KANS;AAOTU,QAAAA,WAAW,EAAEd;AAPJ,OADC;AAUZe,MAAAA,cAAc,EAAE,CACd;AAAEC,QAAAA,KAAK,EAAExD;AAAT,OADc,EAEd;AAAEwD,QAAAA,KAAK,EAAEvD,eAAT;AAA0BoD,QAAAA,SAAS,EAAE;AAAEI,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,OAAO,EAAE;AAArB;AAArC,OAFc,CAVJ;AAcZC,MAAAA,WAAW,EAAEC,eAAe;AAdhB,KAAD,CAAb;AAgBD,GA5BD;;AA8BA,QAAMA,eAAe,GAAG,MAAM;AAC5B3B,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM;AACP,GATD;;AAWA,QAAMc,OAAO,GAAGvC,SAAS,EAAzB;AACA,SACE,0CACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEuC,OAAO,CAACrC,MADrB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAC,WAJV;AAKE,IAAA,OAAO,EAAE,MAAMuB,MAAM,EALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAWE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAED,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,MAAM,EAAC,aAJT;AAKE,IAAA,QAAQ,EAAGI,CAAD,IACRD,UAAU,CACRC,CADQ,EAERnB,SAFQ,EAGRE,QAHQ,EAIRE,OAJQ,EAKRE,KALQ,EAMRE,KANQ,EAORE,KAPQ,EAQRE,KARQ,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,eAAe,EAAE;AACfkB,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,KAAK,EAAE9B,SART;AASE,IAAA,QAAQ,EAAGmB,CAAD,IAAOlB,YAAY,CAACkB,CAAC,CAACY,MAAF,CAASC,KAAV,CAT/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,EA+BE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,eAAe,EAAE;AACfF,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,KAAK,EAAE5B,QART;AASE,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACY,MAAF,CAASC,KAAV,CAT9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/BF,EA4CE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,eAAe,EAAE;AACfF,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,SAAS,MANX;AAOE,IAAA,KAAK,EAAE1B,OAPT;AAQE,IAAA,QAAQ,EAAGe,CAAD,IAAOd,UAAU,CAACc,CAAC,CAACY,MAAF,CAASC,KAAV,CAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5CF,EAwDE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,eAAe,EAAE;AACfF,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,SAAS,MANX;AAOE,IAAA,KAAK,EAAExB,KAPT;AAQE,IAAA,QAAQ,EAAGa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACY,MAAF,CAASC,KAAV,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxDF,EAoEE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAC,UAAzC;AAAoD,IAAA,SAAS,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,qBAFV;AAGE,IAAA,YAAY,EAAC,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAqB,IAAA,OAAO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,EASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CAFF,CADF,CApEF,EAoFE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,eAAe,EAAE;AACfF,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,SAAS,MANX;AAOE,IAAA,KAAK,EAAEtB,KAPT;AAQE,IAAA,QAAQ,EAAGW,CAAD,IAAOV,QAAQ,CAACU,CAAC,CAACY,MAAF,CAASC,KAAV,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApFF,EA4GE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,eAAe,EAAE;AACfF,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,SAAS,MANX;AAOE,IAAA,KAAK,EAAEpB,KAPT;AAQE,IAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACY,MAAF,CAASC,KAAV,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5GF,EAwHE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,eAAe,EAAE;AACfF,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,SAAS,MANX;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,KAAK,EAAElB,KART;AASE,IAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV,CAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxHF,EAqIE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,EAAE,CAAC,CAAChC,SAAF,IAAe,CAAC,CAACE,QAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAUGF,SAAS,IAAIE,QAAb,GACC,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,UAASF,SAAU,EAAhD,CADD,GAGC,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,MAAzB;AAAgC,IAAA,QAAQ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ,CArIF,CAJF,EA4JGiB,KAAK,IAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAK,CAACgB,OAAd,CA5JZ,CADF,CAXF,CADF;AA8KD,CArOM","sourcesContent":["import React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useModal } from \"../../utils\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT, ALL_CONTACTS_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\n\nimport {\n  makeStyles,\n  Button,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl,\n} from \"@material-ui/core\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Input, Label, Textarea, Required } from \"../../styled/forms\";\nimport { RedButton, InactiveButton } from \"../../styled/buttons\";\nimport { Error } from \"../global\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nexport const NewContactModal = ({ redButton, roundButton, blackButton }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  const { isShowing, toggle } = useModal();\n\n  const [createContact, { error }] = useMutation(CREATE_CONTACT);\n\n  const formSubmit = (\n    e,\n    firstName,\n    lastName,\n    company,\n    title,\n    phone,\n    email,\n    notes\n  ) => {\n    e.preventDefault();\n\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        email,\n        notes,\n        phoneNumber: phone,\n      },\n      refetchQueries: [\n        { query: ALL_CONTACTS_QUERY },\n        { query: HOME_PAGE_QUERY, variables: { limit: 8, reverse: true } },\n      ],\n      onCompleted: createCompleted(),\n    });\n  };\n\n  const createCompleted = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setCompany(\"\");\n    setTitle(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    toggle();\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        className={classes.button}\n        size=\"medium\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => toggle()}\n      >\n        New Contact\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n\n          <PageHeading>New Contact</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={(e) =>\n              formSubmit(\n                e,\n                firstName,\n                lastName,\n                company,\n                title,\n                phone,\n                email,\n                notes\n              )\n            }\n          >\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"First Name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Last Name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Company\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                fullWidth\n                value={company}\n                onChange={(e) => setCompany(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Title\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                fullWidth\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 2\">\n              <FormControl gridColumn=\"span 2\" variant=\"outlined\" fullWidth>\n                <InputLabel id=\"country-input-label\">Country</InputLabel>\n                <Select\n                  label=\"Country\"\n                  labelId=\"country-input-label\"\n                  defaultValue=\"US\"\n                >\n                  <MenuItem value=\"US\" default>\n                    US\n                  </MenuItem>\n                  <MenuItem value=\"UK\">UK</MenuItem>\n                  <MenuItem value=\"CA\">CA</MenuItem>\n                </Select>\n              </FormControl>\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\">\n              <TextField\n                variant=\"outlined\"\n                label=\"PhoneNumber\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                fullWidth\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              />\n\n              {/* <Label>Phone Number</Label>\n              <Input\n                as={InputMask}\n                mask=\"(999) 999-9999\"\n                placeholder=\"(555) 555-5555\"\n                value={phone}\n                onChange={\n                  (e) => setPhone(e.target.value)\n                  //   e.target.value.isNaN ? null : setPhone(e.target.value)\n                }\n              /> */}\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Email\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                fullWidth\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 12\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Notes\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                fullWidth\n                multiline\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"4 / 10\">\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"large\"\n                fullWidth\n                inactive={!!firstName || !!lastName}\n              >\n                Create Contact\n              </Button>\n              {firstName && lastName ? (\n                <RedButton minWidth=\"100%\">{`Create ${firstName}`}</RedButton>\n              ) : (\n                <InactiveButton minWidth=\"100%\" disabled>\n                  Create Contact\n                </InactiveButton>\n              )}\n            </InputWrapper>\n          </GridWrapper>\n          {error && <Error>{error.message}</Error>}\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}