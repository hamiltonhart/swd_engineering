{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useQuery}from\"@apollo/react-hooks\";import{ALL_DRIVES_QUERY}from\"../gql\";import{makeStyles,InputLabel,MenuItem,Select,OutlinedInput,TextField}from\"@material-ui/core\";import SearchIcon from\"@material-ui/icons/Search\";import{MainWrapper,PageHeadingWrapper,FlexWrapper,InputWrapper}from\"../styled/containers\";import{PageHeading}from\"../styled/typography\";import{DriveListInfo}from\"../components/Drives\";import{Label}from\"../styled/forms\";import{Icon}from\"../styled/icons\";import{NewDriveModal}from\"../components/Drives\";var useStyles=makeStyles({select:{minWidth:\"212px\"},label:{paddingLeft:\"12px\"},search:{}});var DrivesListPage=function DrivesListPage(){var _useState=useState(\"available\"),_useState2=_slicedToArray(_useState,2),filterValue=_useState2[0],setFilterValue=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchValue=_useState4[0],setSearchValue=_useState4[1];var _useQuery=useQuery(ALL_DRIVES_QUERY),data=_useQuery.data,loading=_useQuery.loading,error=_useQuery.error;var classes=useStyles();return React.createElement(MainWrapper,null,React.createElement(PageHeadingWrapper,null,React.createElement(PageHeading,null,\"Drives\")),React.createElement(FlexWrapper,{justifyContent:\"space-between\",alignItems:\"flex-end\"},React.createElement(InputWrapper,{width:\"none\"},React.createElement(InputLabel,{className:classes.label,id:\"drive-filter-label\"},\"Sorting\"),React.createElement(Select,{labelId:\"drive-filter-label\",id:\"drive-filter-select\",className:classes.select,value:filterValue,color:\"primary\",variant:\"outlined\",onChange:function onChange(e){return setFilterValue(e.target.value);}},React.createElement(MenuItem,{value:\"all\"},\"All\"),React.createElement(MenuItem,{value:\"available\"},\"Available\"),React.createElement(MenuItem,{value:\"unavailable\"},\"Unavailable\"))),React.createElement(InputWrapper,{width:\"auto\"},React.createElement(InputLabel,{className:classes.label},\"Search\"),React.createElement(OutlinedInput,{placeholder:\"Number or Rental\",value:searchValue,label:\"Search\",color:\"primary\",notched:false,endAdornment:React.createElement(SearchIcon,null),variant:\"outlined\",onChange:function onChange(e){return setSearchValue(e.target.value);}}))),loading&&React.createElement(\"h1\",null,\"Loading...\"),error&&React.createElement(\"h1\",null,error.message),data&&React.createElement(React.Fragment,null,React.createElement(DriveListInfo,{drives:data.drives,filterValue:filterValue})),React.createElement(NewDriveModal,null));};export default DrivesListPage;{/* <Icon\n  position=\"absolute\"\n  top=\"45%\"\n  right=\"10%\"\n  svgWidth=\"20px\"\n  cursor=\"pointer\"\n>\n  <SearchIcon />\n</Icon>; */}","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/pages/DrivesListPage.js"],"names":["React","useState","useEffect","useQuery","ALL_DRIVES_QUERY","makeStyles","InputLabel","MenuItem","Select","OutlinedInput","TextField","SearchIcon","MainWrapper","PageHeadingWrapper","FlexWrapper","InputWrapper","PageHeading","DriveListInfo","Label","Icon","NewDriveModal","useStyles","select","minWidth","label","paddingLeft","search","DrivesListPage","filterValue","setFilterValue","searchValue","setSearchValue","data","loading","error","classes","e","target","value","message","drives"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_DRIVES_QUERY } from \"../gql\";\n\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  Select,\n  OutlinedInput,\n  TextField\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport {\n  MainWrapper,\n  PageHeadingWrapper,\n  FlexWrapper,\n  InputWrapper\n} from \"../styled/containers\";\nimport { PageHeading } from \"../styled/typography\";\nimport { DriveListInfo } from \"../components/Drives\";\nimport { Label } from \"../styled/forms\";\nimport { Icon } from \"../styled/icons\";\nimport { NewDriveModal } from \"../components/Drives\";\n\nconst useStyles = makeStyles({\n  select: {\n    minWidth: \"212px\"\n  },\n  label: {\n    paddingLeft: \"12px\"\n  },\n  search: {}\n});\n\nconst DrivesListPage = () => {\n  const [filterValue, setFilterValue] = useState(\"available\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const { data, loading, error } = useQuery(ALL_DRIVES_QUERY);\n\n  const classes = useStyles();\n\n  return (\n    <MainWrapper>\n      <PageHeadingWrapper>\n        <PageHeading>Drives</PageHeading>\n      </PageHeadingWrapper>\n\n      <FlexWrapper justifyContent=\"space-between\" alignItems=\"flex-end\">\n        <InputWrapper width=\"none\">\n          <InputLabel className={classes.label} id=\"drive-filter-label\">\n            Sorting\n          </InputLabel>\n          <Select\n            labelId=\"drive-filter-label\"\n            id=\"drive-filter-select\"\n            className={classes.select}\n            value={filterValue}\n            color=\"primary\"\n            variant=\"outlined\"\n            onChange={e => setFilterValue(e.target.value)}\n          >\n            <MenuItem value=\"all\">All</MenuItem>\n            <MenuItem value=\"available\">Available</MenuItem>\n            <MenuItem value=\"unavailable\">Unavailable</MenuItem>\n          </Select>\n        </InputWrapper>\n\n        <InputWrapper width=\"auto\">\n          <InputLabel className={classes.label}>Search</InputLabel>\n          <OutlinedInput\n            placeholder=\"Number or Rental\"\n            value={searchValue}\n            label=\"Search\"\n            color=\"primary\"\n            notched={false}\n            endAdornment={<SearchIcon />}\n            variant=\"outlined\"\n            onChange={e => setSearchValue(e.target.value)}\n          />\n        </InputWrapper>\n      </FlexWrapper>\n\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>{error.message}</h1>}\n      {data && (\n        <>\n          <DriveListInfo drives={data.drives} filterValue={filterValue} />\n        </>\n      )}\n\n      <NewDriveModal />\n    </MainWrapper>\n  );\n};\n\nexport default DrivesListPage;\n\n{\n  /* <Icon\n  position=\"absolute\"\n  top=\"45%\"\n  right=\"10%\"\n  svgWidth=\"20px\"\n  cursor=\"pointer\"\n>\n  <SearchIcon />\n</Icon>; */\n}\n"]},"metadata":{},"sourceType":"module"}