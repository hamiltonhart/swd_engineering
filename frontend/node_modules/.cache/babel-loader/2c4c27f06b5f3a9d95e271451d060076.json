{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactDetailEditModal.js\";\nimport React from \"react\";\nimport { useModal } from \"../../utils/useModal\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CONTACT_QUERY } from \"../../gql\";\nimport { FlexWrapper } from \"../../styled/containers\";\nimport { ContactDetailModal } from \"./ContactDetailModal\";\nimport { EditContactModal } from \"./EditContactModal\";\nimport { BlackButton } from \"../../styled/buttons\";\nimport { Loading, Error } from \"../global\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities/Modal\";\nimport { Button } from \"@material-ui/core\";\nexport const ContactDetailEditModal = ({\n  toggleOverlay,\n  isShowingOverlay,\n  contactId\n}) => {\n  const {\n    isShowing: isShowingDetail,\n    toggle: toggleDetail\n  } = useModal(true);\n  const {\n    isShowing: isShowingEdit,\n    toggle: toggleEdit\n  } = useModal();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(CONTACT_QUERY, {\n    variables: {\n      id: contactId\n    }\n  });\n\n  const toggleDetailEdit = () => {\n    toggleDetail();\n    toggleEdit();\n  };\n\n  return React.createElement(Modal, {\n    isShowing: isShowingOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, isShowingDetail && React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: toggleOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), loading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, error.message), data && React.createElement(React.Fragment, null, React.createElement(ContactDetailModal, {\n    contact: data.contact,\n    toggleOverlay: toggleOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FlexWrapper, {\n    padding: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: e => toggleDetailEdit(toggleDetail, toggleEdit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Edit\")))), isShowingEdit && React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: () => toggleDetailEdit(toggleDetail, toggleEdit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(EditContactModal, {\n    toggleOverlay: toggleOverlay,\n    toggleDetailEdit: toggleDetailEdit,\n    contact: data.contact,\n    contactId: contactId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactDetailEditModal.js"],"names":["React","useModal","useQuery","CONTACT_QUERY","FlexWrapper","ContactDetailModal","EditContactModal","BlackButton","Loading","Error","Modal","ModalArea","ModalCloseIcon","Button","ContactDetailEditModal","toggleOverlay","isShowingOverlay","contactId","isShowing","isShowingDetail","toggle","toggleDetail","isShowingEdit","toggleEdit","data","loading","error","variables","id","toggleDetailEdit","message","contact","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useModal } from \"../../utils/useModal\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CONTACT_QUERY } from \"../../gql\";\n\nimport { FlexWrapper } from \"../../styled/containers\";\nimport { ContactDetailModal } from \"./ContactDetailModal\";\nimport { EditContactModal } from \"./EditContactModal\";\nimport { BlackButton } from \"../../styled/buttons\";\nimport { Loading, Error } from \"../global\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities/Modal\";\n\nimport { Button } from \"@material-ui/core\";\n\nexport const ContactDetailEditModal = ({\n  toggleOverlay,\n  isShowingOverlay,\n  contactId\n}) => {\n  const { isShowing: isShowingDetail, toggle: toggleDetail } = useModal(true);\n  const { isShowing: isShowingEdit, toggle: toggleEdit } = useModal();\n\n  const { data, loading, error } = useQuery(CONTACT_QUERY, {\n    variables: { id: contactId }\n  });\n\n  const toggleDetailEdit = () => {\n    toggleDetail();\n    toggleEdit();\n  };\n\n  return (\n    <Modal isShowing={isShowingOverlay}>\n      {isShowingDetail && (\n        <ModalArea>\n          <ModalCloseIcon toggle={toggleOverlay} />\n          {loading && <Loading />}\n          {error && <Error>{error.message}</Error>}\n          {data && (\n            <>\n              <ContactDetailModal\n                contact={data.contact}\n                toggleOverlay={toggleOverlay}\n              />\n              <FlexWrapper padding=\"0\">\n                <Button\n                  size=\"large\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={e => toggleDetailEdit(toggleDetail, toggleEdit)}\n                >\n                  Edit\n                </Button>\n              </FlexWrapper>\n            </>\n          )}\n        </ModalArea>\n      )}\n      {isShowingEdit && (\n        <ModalArea>\n          <ModalCloseIcon\n            toggle={() => toggleDetailEdit(toggleDetail, toggleEdit)}\n          />\n          <EditContactModal\n            toggleOverlay={toggleOverlay}\n            toggleDetailEdit={toggleDetailEdit}\n            contact={data.contact}\n            contactId={contactId}\n          />\n        </ModalArea>\n      )}\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}