{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/EditDriveForm.js\";\nimport React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\nimport { makeStyles, Grid, TextField, formControl, InputLabel, MenuItem, Button } from \"@material-ui/core\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_DRIVE, HOME_PAGE_QUERY, ALL_DRIVES_QUERY } from \"../../gql\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport const EditDriveForm = ({\n  toggle,\n  driveId,\n  drive\n}) => {\n  const [updateDrive, {\n    error: updateError\n  }] = useMutation(UPDATE_DRIVE);\n  const [driveNumber, setDriveNumber] = useState(`${drive.driveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(drive.driveCapacityGb);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateDrive({\n      variables: {\n        id: driveId,\n        driveNumber,\n        driveCapacityGb\n      },\n      onCompleted: editDriveCompleted()\n    });\n  };\n\n  const editDriveCompleted = () => {\n    toggle();\n  };\n\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    component: \"form\",\n    spacing: 2,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Drive Number\",\n    placeholder: \"ex. 1\",\n    variant: \"outlined\",\n    defaultValue: driveNumber,\n    helperText: \"Next available is auto-filled\",\n    fullWidth: true,\n    required: true,\n    autoFocus: true,\n    onChange: e => setDriveNumber(e.target.value),\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"drive-capacity-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Capacity\"), React.createElement(Select, {\n    labelId: \"drive-capacity-label\",\n    label: \"Capacity\",\n    id: \"drive-capacity-select\",\n    color: \"primary\",\n    fullWidth: true,\n    defaultValue: driveCapacityGb,\n    onChange: e => setDriveCapacityGb(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"250GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"250GB\"), React.createElement(MenuItem, {\n    value: \"500GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"500GB\"), React.createElement(MenuItem, {\n    value: \"1TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"1TB\"), React.createElement(MenuItem, {\n    value: \"2TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"2TB\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Drive Quantity\",\n    placeholder: \"ex. 1\",\n    variant: \"outlined\",\n    defaultValue: driveQuantity,\n    helperText: \"Drive Number will increment\",\n    fullWidth: true,\n    required: true,\n    onChange: e => setDriveQuantity(e.target.value),\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !driveNumber.trim() || !driveCapacityGb | !driveQuantity.trim() || driveQuantity == 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Create Drives\")));\n}; // const ReleaseDriveButtons = ({\n//   releaseActive,\n//   setReleaseActive,\n//   deleteActive,\n//   handleRelease\n// }) =>\n//   releaseActive ? (\n//     <ClickAwayListener onClickAway={() => setReleaseActive(false)}>\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         onClick={e => handleRelease(e)}\n//       >\n//         Release Drive\n//       </Button>\n//     </ClickAwayListener>\n//   ) : (\n//     <Button\n//       color=\"primary\"\n//       variant=\"outlined\"\n//       disabled={deleteActive}\n//       onClick={e => setReleaseActive(true)}\n//     >\n//       Release Drive\n//     </Button>\n//   );","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/EditDriveForm.js"],"names":["React","useState","InputWrapper","FlexWrapper","Input","Label","Select","Required","makeStyles","Grid","TextField","formControl","InputLabel","MenuItem","Button","useMutation","UPDATE_DRIVE","HOME_PAGE_QUERY","ALL_DRIVES_QUERY","useStyles","theme","root","marginTop","spacing","EditDriveForm","toggle","driveId","drive","updateDrive","error","updateError","driveNumber","setDriveNumber","driveCapacityGb","setDriveCapacityGb","handleSubmit","e","preventDefault","variables","id","onCompleted","editDriveCompleted","classes","target","value","shrink","driveQuantity","setDriveQuantity","trim"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\n\nimport {\n  makeStyles,\n  Grid,\n  TextField,\n  formControl,\n  InputLabel,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_DRIVE, HOME_PAGE_QUERY, ALL_DRIVES_QUERY } from \"../../gql\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const EditDriveForm = ({ toggle, driveId, drive }) => {\n  const [updateDrive, { error: updateError }] = useMutation(UPDATE_DRIVE);\n\n  const [driveNumber, setDriveNumber] = useState(`${drive.driveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(drive.driveCapacityGb);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateDrive({\n      variables: {\n        id: driveId,\n        driveNumber,\n        driveCapacityGb,\n      },\n      onCompleted: editDriveCompleted(),\n    });\n  };\n\n  const editDriveCompleted = () => {\n    toggle();\n  };\n\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      className={classes.root}\n      component=\"form\"\n      spacing={2}\n      onSubmit={(e) => handleSubmit(e)}\n    >\n      <Grid item xs={12} sm={4}>\n        <TextField\n          label=\"Drive Number\"\n          placeholder=\"ex. 1\"\n          variant=\"outlined\"\n          defaultValue={driveNumber}\n          helperText=\"Next available is auto-filled\"\n          fullWidth\n          required\n          autoFocus\n          onChange={(e) => setDriveNumber(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={12} sm={4}>\n        <FormControl fullWidth variant=\"outlined\" required>\n          <InputLabel id=\"drive-capacity-label\">Capacity</InputLabel>\n          <Select\n            labelId=\"drive-capacity-label\"\n            label=\"Capacity\"\n            id=\"drive-capacity-select\"\n            color=\"primary\"\n            fullWidth\n            defaultValue={driveCapacityGb}\n            onChange={(e) => setDriveCapacityGb(e.target.value)}\n          >\n            <MenuItem value=\"250GB\">250GB</MenuItem>\n            <MenuItem value=\"500GB\">500GB</MenuItem>\n            <MenuItem value=\"1TB\">1TB</MenuItem>\n            <MenuItem value=\"2TB\">2TB</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          label=\"Drive Quantity\"\n          placeholder=\"ex. 1\"\n          variant=\"outlined\"\n          defaultValue={driveQuantity}\n          helperText=\"Drive Number will increment\"\n          fullWidth\n          required\n          onChange={(e) => setDriveQuantity(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Grid>\n\n      <Grid container item xs={12} justify=\"flex-end\">\n        <Button\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={\n            !driveNumber.trim() ||\n            !driveCapacityGb | !driveQuantity.trim() ||\n            driveQuantity == 0\n          }\n        >\n          Create Drives\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\n// const ReleaseDriveButtons = ({\n//   releaseActive,\n//   setReleaseActive,\n//   deleteActive,\n//   handleRelease\n// }) =>\n//   releaseActive ? (\n//     <ClickAwayListener onClickAway={() => setReleaseActive(false)}>\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         onClick={e => handleRelease(e)}\n//       >\n//         Release Drive\n//       </Button>\n//     </ClickAwayListener>\n//   ) : (\n//     <Button\n//       color=\"primary\"\n//       variant=\"outlined\"\n//       disabled={deleteActive}\n//       onClick={e => setReleaseActive(true)}\n//     >\n//       Release Drive\n//     </Button>\n//   );\n"]},"metadata":{},"sourceType":"module"}