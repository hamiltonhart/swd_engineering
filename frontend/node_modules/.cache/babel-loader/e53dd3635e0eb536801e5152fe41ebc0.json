{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactModal.js\";\nimport React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useModal } from \"../../utils\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT, ALL_CONTACTS_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\nimport { makeStyles, Button, TextField } from \"@material-ui/core\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Textarea, Required } from \"../../styled/forms\";\nimport { RedButton, InactiveButton } from \"../../styled/buttons\";\nimport { Error } from \"../global\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\nexport const NewContactModal = ({\n  redButton,\n  roundButton,\n  blackButton\n}) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [createContact, {\n    error\n  }] = useMutation(CREATE_CONTACT);\n\n  const formSubmit = (e, firstName, lastName, company, title, phone, email, notes) => {\n    e.preventDefault();\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        email,\n        notes,\n        phoneNumber: phone\n      },\n      refetchQueries: [{\n        query: ALL_CONTACTS_QUERY\n      }, {\n        query: HOME_PAGE_QUERY,\n        variables: {\n          limit: 8,\n          reverse: true\n        }\n      }],\n      onCompleted: createCompleted()\n    });\n  };\n\n  const createCompleted = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setCompany(\"\");\n    setTitle(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    toggle();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    className: classes.button,\n    size: \"medium\",\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"New Contact\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"New Contact\"), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"622px;\",\n    maxWidth: \"622px;\",\n    margin: \"20px 0 0 0 \",\n    onSubmit: e => formSubmit(e, firstName, lastName, company, title, phone, email, notes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"First Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Last Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Company\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: company,\n    onChange: e => setCompany(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Title\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"US\",\n    default: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"US\"), React.createElement(\"option\", {\n    value: \"UK\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"UK\"), React.createElement(\"option\", {\n    value: \"CA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"CA\"))), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Title\",\n    InputLabelProps: {\n      shrink: true\n    },\n    required: true,\n    fullWidth: true,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"johndoe@email.com\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Textarea, {\n    placeholder: \"Something that may be useful to know.\",\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, firstName && lastName ? React.createElement(RedButton, {\n    minWidth: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, `Create ${firstName}`) : React.createElement(InactiveButton, {\n    minWidth: \"100%\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Create Contact\"))), error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, error.message))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactModal.js"],"names":["React","useState","InputMask","useModal","useMutation","CREATE_CONTACT","ALL_CONTACTS_QUERY","HOME_PAGE_QUERY","makeStyles","Button","TextField","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","Input","Label","Select","Textarea","Required","RedButton","InactiveButton","Error","useStyles","theme","button","fontWeight","typography","fontWeightBold","NewContactModal","redButton","roundButton","blackButton","firstName","setFirstName","lastName","setLastName","company","setCompany","title","setTitle","phone","setPhone","email","setEmail","notes","setNotes","isShowing","toggle","createContact","error","formSubmit","e","preventDefault","variables","phoneNumber","refetchQueries","query","limit","reverse","onCompleted","createCompleted","classes","shrink","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useModal } from \"../../utils\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT, ALL_CONTACTS_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\n\nimport { makeStyles, Button, TextField } from \"@material-ui/core\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Textarea, Required } from \"../../styled/forms\";\nimport { RedButton, InactiveButton } from \"../../styled/buttons\";\nimport { Error } from \"../global\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nexport const NewContactModal = ({ redButton, roundButton, blackButton }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  const { isShowing, toggle } = useModal();\n\n  const [createContact, { error }] = useMutation(CREATE_CONTACT);\n\n  const formSubmit = (\n    e,\n    firstName,\n    lastName,\n    company,\n    title,\n    phone,\n    email,\n    notes\n  ) => {\n    e.preventDefault();\n\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        email,\n        notes,\n        phoneNumber: phone,\n      },\n      refetchQueries: [\n        { query: ALL_CONTACTS_QUERY },\n        { query: HOME_PAGE_QUERY, variables: { limit: 8, reverse: true } },\n      ],\n      onCompleted: createCompleted(),\n    });\n  };\n\n  const createCompleted = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setCompany(\"\");\n    setTitle(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    toggle();\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        className={classes.button}\n        size=\"medium\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => toggle()}\n      >\n        New Contact\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n\n          <PageHeading>New Contact</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={(e) =>\n              formSubmit(\n                e,\n                firstName,\n                lastName,\n                company,\n                title,\n                phone,\n                email,\n                notes\n              )\n            }\n          >\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"First Name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Last Name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Company\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={company}\n                onChange={(e) => setCompany(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Title\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 2\">\n              <Label>Country</Label>\n              <Select>\n                <option value=\"US\" default>\n                  US\n                </option>\n                <option value=\"UK\">UK</option>\n                <option value=\"CA\">CA</option>\n              </Select>\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\">\n              <TextField\n                variant=\"outlined\"\n                label=\"Title\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n                fullWidth\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n\n              {/* <Label>Phone Number</Label>\n              <Input\n                as={InputMask}\n                mask=\"(999) 999-9999\"\n                placeholder=\"(555) 555-5555\"\n                value={phone}\n                onChange={\n                  (e) => setPhone(e.target.value)\n                  //   e.target.value.isNaN ? null : setPhone(e.target.value)\n                }\n              /> */}\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <Label>Email</Label>\n              <Input\n                type=\"email\"\n                placeholder=\"johndoe@email.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 12\">\n              <Label>Notes</Label>\n              <Textarea\n                placeholder=\"Something that may be useful to know.\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"4 / 10\">\n              {firstName && lastName ? (\n                <RedButton minWidth=\"100%\">{`Create ${firstName}`}</RedButton>\n              ) : (\n                <InactiveButton minWidth=\"100%\" disabled>\n                  Create Contact\n                </InactiveButton>\n              )}\n            </InputWrapper>\n          </GridWrapper>\n          {error && <Error>{error.message}</Error>}\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}