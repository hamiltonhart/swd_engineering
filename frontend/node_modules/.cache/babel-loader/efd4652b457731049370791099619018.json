{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/EditNotesModal.js\";\nimport React, { useState } from \"react\";\nimport { useModal } from \"../../../../utils\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { EDIT_RENTAL_NOTES } from \"../../../../gql\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport { PageHeading } from \"../../../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../../../styled/containers\";\nimport { Error } from \"../../../global\";\nimport { Button, TextField } from \"@material-ui/core\";\nexport const EditNotesModal = ({\n  currentNotes,\n  projectId\n}) => {\n  const [notes, setNotes] = useState(currentNotes);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [updateRentalProject, {\n    error\n  }] = useMutation(EDIT_RENTAL_NOTES);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateRentalProject({\n      variables: {\n        id: projectId,\n        notes\n      },\n      onCompleted: updateComplete()\n    });\n  };\n\n  const updateComplete = () => {\n    toggle();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Edit Notes\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Edit Notes\"), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"622px;\",\n    maxWidth: \"622px;\",\n    margin: \"20px 0 0 0 \",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"span 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    multiline: true,\n    rows: \"20\",\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    color: \"primary\",\n    variant: \"contained\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, `Submit`))), error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/EditNotesModal.js"],"names":["React","useState","useModal","useMutation","EDIT_RENTAL_NOTES","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","Error","Button","TextField","EditNotesModal","currentNotes","projectId","notes","setNotes","isShowing","toggle","updateRentalProject","error","handleSubmit","e","preventDefault","variables","id","onCompleted","updateComplete","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useModal } from \"../../../../utils\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { EDIT_RENTAL_NOTES } from \"../../../../gql\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport { PageHeading } from \"../../../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../../../styled/containers\";\nimport { Error } from \"../../../global\";\n\nimport { Button, TextField } from \"@material-ui/core\";\n\nexport const EditNotesModal = ({ currentNotes, projectId }) => {\n  const [notes, setNotes] = useState(currentNotes);\n\n  const { isShowing, toggle } = useModal();\n\n  const [updateRentalProject, { error }] = useMutation(EDIT_RENTAL_NOTES);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateRentalProject({\n      variables: { id: projectId, notes },\n      onCompleted: updateComplete()\n    });\n  };\n\n  const updateComplete = () => {\n    toggle();\n  };\n\n  return (\n    <>\n      <Button\n        size=\"small\"\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => toggle()}\n      >\n        Edit Notes\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n\n          <PageHeading>Edit Notes</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={e => handleSubmit(e)}\n          >\n            <InputWrapper gridColumn=\"span 12\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                multiline\n                rows=\"20\"\n                value={notes}\n                onChange={e => setNotes(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"4 / 10\">\n              <Button\n                type=\"submit\"\n                size=\"large\"\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n              >{`Submit`}</Button>\n            </InputWrapper>\n          </GridWrapper>\n          {error && <Error error={error} />}\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}