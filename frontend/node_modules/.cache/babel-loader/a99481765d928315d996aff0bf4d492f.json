{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/EditContactModal.js\";\nimport React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { DELETE_CONTACT, UPDATE_CONTACT, ALL_CONTACTS_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Textarea, Required } from \"../../styled/forms\";\nimport { makeStyles, Button, ClickAwayListener } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  deleteButton: {\n    gridColumn: \"4 / 10\"\n  }\n});\nexport const EditContactModal = ({\n  contactId,\n  contact,\n  toggleOverlay,\n  toggleDetailEdit\n}) => {\n  const [firstName, setFirstName] = useState(contact.firstName);\n  const [lastName, setLastName] = useState(contact.lastName);\n  const [company, setCompany] = useState(contact.company || \"\");\n  const [title, setTitle] = useState(contact.title || \"\");\n  const [phone, setPhone] = useState(contact.phoneNumber || \"\");\n  const [email, setEmail] = useState(contact.email || \"\");\n  const [notes, setNotes] = useState(contact.notes || \"\");\n  const [deleteActive, setDeleteActive] = useState(false);\n  const [deleteContact, {\n    error: deleteError\n  }] = useMutation(DELETE_CONTACT);\n  const [updateContact, {\n    error: editError\n  }] = useMutation(UPDATE_CONTACT);\n\n  const deleteContactSubmit = (e, contactId) => {\n    e.preventDefault();\n    deleteContact({\n      variables: {\n        contactId: contactId\n      },\n      refetchQueries: [{\n        query: ALL_CONTACTS_QUERY\n      }, {\n        query: HOME_PAGE_QUERY,\n        variables: {\n          limit: 8,\n          reverse: true\n        }\n      }],\n      onCompleted: contactDeleted()\n    });\n  };\n\n  const formSubmit = (e, updateContact) => {\n    e.preventDefault();\n    updateContact({\n      variables: {\n        id: contactId,\n        firstName,\n        lastName,\n        company,\n        title,\n        phoneNumber: phone,\n        email,\n        notes\n      },\n      onCompleted: contactUpdated()\n    });\n  };\n\n  const contactDeleted = () => {\n    toggleOverlay();\n  };\n\n  const contactUpdated = () => {\n    toggleDetailEdit();\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Edit Contact\"), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"622px;\",\n    maxWidth: \"622px;\",\n    margin: \"20px 0 0 0 \",\n    onSubmit: e => formSubmit(e, updateContact),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"FirstName \", React.createElement(Required, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"*\")), React.createElement(Input, {\n    placeholder: \"John (required)\",\n    value: firstName,\n    required: true,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"LastName \", React.createElement(Required, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"*\")), React.createElement(Input, {\n    placeholder: \"Doe (required)\",\n    value: lastName,\n    required: true,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Company\"), React.createElement(Input, {\n    placeholder: \"Technicolor\",\n    value: company,\n    onChange: e => setCompany(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Input, {\n    placeholder: \"Mixer\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"US\",\n    default: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"US\"), React.createElement(\"option\", {\n    value: \"UK\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"UK\"), React.createElement(\"option\", {\n    value: \"CA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"CA\"))), React.createElement(InputWrapper, {\n    gridColumn: \"span 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(Input, {\n    as: InputMask,\n    mask: \"(999) 999-9999\",\n    placeholder: \"(555) 555-5555\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"johndoe@email.com\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"span 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Textarea, {\n    placeholder: \"Something that may be useful to know.\",\n    value: notes,\n    onChange: e => setNotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, firstName && lastName && !deleteActive ? React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    color: \"primary\",\n    fullWidth: true,\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, `Save ${firstName}`) : React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    color: \"primary\",\n    fullWidth: true,\n    variant: \"contained\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, `Save ${firstName}`)), deleteActive ? React.createElement(ClickAwayListener, {\n    onClickAway: () => setDeleteActive(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.deleteButton,\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    fullWidth: true,\n    onClick: e => deleteContactSubmit(e, contactId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Delete\")) : React.createElement(Button, {\n    className: classes.deleteButton,\n    color: \"primary\",\n    fullWidth: true,\n    size: \"small\",\n    onClick: e => setDeleteActive(!deleteActive),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Delete\")));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/EditContactModal.js"],"names":["React","useState","InputMask","DELETE_CONTACT","UPDATE_CONTACT","ALL_CONTACTS_QUERY","HOME_PAGE_QUERY","useMutation","PageHeading","GridWrapper","InputWrapper","Input","Label","Select","Textarea","Required","makeStyles","Button","ClickAwayListener","useStyles","deleteButton","gridColumn","EditContactModal","contactId","contact","toggleOverlay","toggleDetailEdit","firstName","setFirstName","lastName","setLastName","company","setCompany","title","setTitle","phone","setPhone","phoneNumber","email","setEmail","notes","setNotes","deleteActive","setDeleteActive","deleteContact","error","deleteError","updateContact","editError","deleteContactSubmit","e","preventDefault","variables","refetchQueries","query","limit","reverse","onCompleted","contactDeleted","formSubmit","id","contactUpdated","classes","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\n\nimport {\n  DELETE_CONTACT,\n  UPDATE_CONTACT,\n  ALL_CONTACTS_QUERY,\n  HOME_PAGE_QUERY\n} from \"../../gql\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport { PageHeading } from \"../../styled/typography\";\nimport { GridWrapper, InputWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Textarea, Required } from \"../../styled/forms\";\n\nimport { makeStyles, Button, ClickAwayListener } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  deleteButton: {\n    gridColumn: \"4 / 10\"\n  }\n});\n\nexport const EditContactModal = ({\n  contactId,\n  contact,\n  toggleOverlay,\n  toggleDetailEdit\n}) => {\n  const [firstName, setFirstName] = useState(contact.firstName);\n  const [lastName, setLastName] = useState(contact.lastName);\n  const [company, setCompany] = useState(contact.company || \"\");\n  const [title, setTitle] = useState(contact.title || \"\");\n  const [phone, setPhone] = useState(contact.phoneNumber || \"\");\n  const [email, setEmail] = useState(contact.email || \"\");\n  const [notes, setNotes] = useState(contact.notes || \"\");\n  const [deleteActive, setDeleteActive] = useState(false);\n\n  const [deleteContact, { error: deleteError }] = useMutation(DELETE_CONTACT);\n  const [updateContact, { error: editError }] = useMutation(UPDATE_CONTACT);\n\n  const deleteContactSubmit = (e, contactId) => {\n    e.preventDefault();\n    deleteContact({\n      variables: { contactId: contactId },\n      refetchQueries: [\n        {\n          query: ALL_CONTACTS_QUERY\n        },\n        { query: HOME_PAGE_QUERY, variables: { limit: 8, reverse: true } }\n      ],\n      onCompleted: contactDeleted()\n    });\n  };\n\n  const formSubmit = (e, updateContact) => {\n    e.preventDefault();\n    updateContact({\n      variables: {\n        id: contactId,\n        firstName,\n        lastName,\n        company,\n        title,\n        phoneNumber: phone,\n        email,\n        notes\n      },\n      onCompleted: contactUpdated()\n    });\n  };\n\n  const contactDeleted = () => {\n    toggleOverlay();\n  };\n\n  const contactUpdated = () => {\n    toggleDetailEdit();\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <PageHeading>Edit Contact</PageHeading>\n      <GridWrapper\n        as=\"form\"\n        minWidth=\"622px;\"\n        maxWidth=\"622px;\"\n        margin=\"20px 0 0 0 \"\n        onSubmit={e => formSubmit(e, updateContact)}\n      >\n        <InputWrapper gridColumn=\"span 6\">\n          <Label>\n            FirstName <Required>*</Required>\n          </Label>\n          <Input\n            placeholder=\"John (required)\"\n            value={firstName}\n            required\n            onChange={e => setFirstName(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 6\">\n          <Label>\n            LastName <Required>*</Required>\n          </Label>\n          <Input\n            placeholder=\"Doe (required)\"\n            value={lastName}\n            required\n            onChange={e => setLastName(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 6\">\n          <Label>Company</Label>\n          <Input\n            placeholder=\"Technicolor\"\n            value={company}\n            onChange={e => setCompany(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 6\">\n          <Label>Title</Label>\n          <Input\n            placeholder=\"Mixer\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 2\">\n          <Label>Country</Label>\n          <Select>\n            <option value=\"US\" default>\n              US\n            </option>\n            <option value=\"UK\">UK</option>\n            <option value=\"CA\">CA</option>\n          </Select>\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 4\">\n          <Label>Phone Number</Label>\n          <Input\n            as={InputMask}\n            mask=\"(999) 999-9999\"\n            placeholder=\"(555) 555-5555\"\n            value={phone}\n            onChange={e => setPhone(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 6\">\n          <Label>Email</Label>\n          <Input\n            type=\"email\"\n            placeholder=\"johndoe@email.com\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"span 12\">\n          <Label>Notes</Label>\n          <Textarea\n            placeholder=\"Something that may be useful to know.\"\n            value={notes}\n            onChange={e => setNotes(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"4 / 10\">\n          {firstName && lastName && !deleteActive ? (\n            <Button\n              type=\"submit\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n            >{`Save ${firstName}`}</Button>\n          ) : (\n            <Button\n              type=\"submit\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n              disabled\n            >{`Save ${firstName}`}</Button>\n          )}\n        </InputWrapper>\n        {deleteActive ? (\n          <ClickAwayListener onClickAway={() => setDeleteActive(false)}>\n            <Button\n              className={classes.deleteButton}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              fullWidth\n              onClick={e => deleteContactSubmit(e, contactId)}\n            >\n              Delete\n            </Button>\n          </ClickAwayListener>\n        ) : (\n          <Button\n            className={classes.deleteButton}\n            color=\"primary\"\n            fullWidth\n            size=\"small\"\n            onClick={e => setDeleteActive(!deleteActive)}\n          >\n            Delete\n          </Button>\n        )}\n      </GridWrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}