{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/ClearDriveProjectIcon.js\";\nimport React from \"react\";\nimport { makeStyles, Typography, Button, IconButton } from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { RELEASE_DRIVE, ALL_DRIVES_QUERY } from \"../../gql\";\nimport { useToggle } from \"../../utils\";\nimport { Modal, ModalContent } from \"../global/Modal\";\nimport { Error } from \"../global\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4)\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    marginTop: theme.spacing(2)\n  }\n}));\nexport const ClearDriveProjectIcon = ({\n  drive,\n  driveProject\n}) => {\n  const {\n    isShowing,\n    toggle\n  } = useToggle();\n  const [releaseDrive, {\n    error\n  }] = useMutation(RELEASE_DRIVE);\n\n  const handleReleaseDrive = e => {\n    e.preventDefault();\n    releaseDrive({\n      variables: {\n        driveId: drive.id\n      },\n      refetchQueries: [{\n        query: ALL_DRIVES_QUERY\n      }],\n      onCompleted: {\n        toggle\n      }\n    });\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ClearIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), isShowing && React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ModalContent, {\n    toggle: toggle,\n    closeIcon: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"This action cannot be undone.\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, `Are you sure you want to release Drive #${drive.driveNumber} from ${drive.rentalProjects[0].project.title}?`), React.createElement(\"div\", {\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: e => handleReleaseDrive(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Release\"))))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/ClearDriveProjectIcon.js"],"names":["React","makeStyles","Typography","Button","IconButton","ClearIcon","useMutation","RELEASE_DRIVE","ALL_DRIVES_QUERY","useToggle","Modal","ModalContent","Error","useStyles","theme","root","display","flexDirection","alignItems","padding","spacing","buttons","justifyContent","width","marginTop","ClearDriveProjectIcon","drive","driveProject","isShowing","toggle","releaseDrive","error","handleReleaseDrive","e","preventDefault","variables","driveId","id","refetchQueries","query","onCompleted","classes","driveNumber","rentalProjects","project","title"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { makeStyles, Typography, Button, IconButton } from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { RELEASE_DRIVE, ALL_DRIVES_QUERY } from \"../../gql\";\n\nimport { useToggle } from \"../../utils\";\nimport { Modal, ModalContent } from \"../global/Modal\";\nimport { Error } from \"../global\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const ClearDriveProjectIcon = ({ drive, driveProject }) => {\n  const { isShowing, toggle } = useToggle();\n\n  const [releaseDrive, { error }] = useMutation(RELEASE_DRIVE);\n\n  const handleReleaseDrive = (e) => {\n    e.preventDefault();\n    releaseDrive({\n      variables: { driveId: drive.id },\n      refetchQueries: [{ query: ALL_DRIVES_QUERY }],\n      onCompleted: { toggle },\n    });\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <IconButton onClick={toggle}>\n        <ClearIcon />\n      </IconButton>\n      {isShowing && (\n        <Modal>\n          {error && <Error error={error} />}\n          <ModalContent toggle={toggle} closeIcon={false}>\n            <div className={classes.root}>\n              <Typography variant=\"h5\" gutterBottom>\n                This action cannot be undone.\n              </Typography>\n              <Typography>{`Are you sure you want to release Drive #${drive.driveNumber} from ${drive.rentalProjects[0].project.title}?`}</Typography>\n              <div className={classes.buttons}>\n                <Button variant=\"outlined\" onClick={toggle}>\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={(e) => handleReleaseDrive(e)}\n                >\n                  Release\n                </Button>\n              </div>\n            </div>\n          </ModalContent>\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}