{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/ViewDrivesModal.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useModal } from \"../../../../utils\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport { PageHeading, Typography, TextLink } from \"../../../../styled/typography\";\nimport { GridWrapper, InputWrapper, FlexWrapper } from \"../../../../styled/containers\";\nimport { Select, Label } from \"../../../../styled/forms\";\nimport { RedButton, BlackButton } from \"../../../../styled/buttons\";\nimport { darkGrey } from \"../../../../styled/defaults\";\nexport const ViewDrivesModal = ({\n  totalDrives,\n  totalStorage,\n  drives\n}) => {\n  const [notes, setNotes] = useState(\"\");\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  return React.createElement(React.Fragment, null, React.createElement(BlackButton, {\n    small: true,\n    onClick: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"View Drives\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Drives\"), React.createElement(FlexWrapper, {\n    padding: \"20px 0 0 0\",\n    justifyContent: \"space-evenly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    fontSize: \"18px\",\n    fontWeight: \"700\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, `${totalDrives} Drives`), React.createElement(Typography, {\n    fontSize: \"18px\",\n    fontWeight: \"700\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, `${totalStorage}`)), React.createElement(GridWrapper, {\n    as: \"form\",\n    minWidth: \"508px\",\n    maxWidth: \"508px\",\n    margin: \"20px 0 0 0 \",\n    gridGap: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Drive\"), React.createElement(Select, {\n    placeholder: \"Select Drive\",\n    defaultOption: \"---\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"---\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"---\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Drive A\"))), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(RedButton, {\n    small: true,\n    minWidth: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Add / Edit\"))), React.createElement(GridWrapper, {\n    minWidth: \"508px\",\n    maxWidth: \"508px\",\n    margin: \"20px 0 0 0 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, drives.map(drive => React.createElement(FlexWrapper, {\n    key: drive.id,\n    padding: \" 0 10px\",\n    gridColumn: \"span 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TextLink, {\n    as: Link,\n    className: \"hover\",\n    fontSize: \"18px\",\n    margin: \"0 10px 0 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, drive.drive.driveNumber), React.createElement(Typography, {\n    fontColor: darkGrey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, drive.drive.driveCapacityGb)))))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/RentalProjects/Detail/ButtonModals/ViewDrivesModal.js"],"names":["React","useState","Link","useModal","Modal","ModalArea","ModalCloseIcon","PageHeading","Typography","TextLink","GridWrapper","InputWrapper","FlexWrapper","Select","Label","RedButton","BlackButton","darkGrey","ViewDrivesModal","totalDrives","totalStorage","drives","notes","setNotes","isShowing","toggle","map","drive","id","driveNumber","driveCapacityGb"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useModal } from \"../../../../utils\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../../../utilities\";\nimport {\n  PageHeading,\n  Typography,\n  TextLink\n} from \"../../../../styled/typography\";\nimport {\n  GridWrapper,\n  InputWrapper,\n  FlexWrapper\n} from \"../../../../styled/containers\";\nimport { Select, Label } from \"../../../../styled/forms\";\nimport { RedButton, BlackButton } from \"../../../../styled/buttons\";\nimport { darkGrey } from \"../../../../styled/defaults\";\n\nexport const ViewDrivesModal = ({ totalDrives, totalStorage, drives }) => {\n  const [notes, setNotes] = useState(\"\");\n\n  const { isShowing, toggle } = useModal();\n\n  return (\n    <>\n      <BlackButton small onClick={() => toggle()}>\n        View Drives\n      </BlackButton>\n\n      <Modal isShowing={isShowing} toggle={toggle}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n\n          <PageHeading>Drives</PageHeading>\n          <FlexWrapper padding=\"20px 0 0 0\" justifyContent=\"space-evenly\">\n            <Typography fontSize=\"18px\" fontWeight=\"700\">\n              {`${totalDrives} Drives`}\n            </Typography>\n            <Typography fontSize=\"18px\" fontWeight=\"700\">\n              {`${totalStorage}`}\n            </Typography>\n          </FlexWrapper>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"508px\"\n            maxWidth=\"508px\"\n            margin=\"20px 0 0 0 \"\n            gridGap=\"0\"\n          >\n            <InputWrapper gridColumn=\"4 / 10\">\n              <Label>Drive</Label>\n              <Select placeholder=\"Select Drive\" defaultOption=\"---\">\n                <option value=\"---\">---</option>\n                <option>Drive A</option>\n              </Select>\n            </InputWrapper>\n            <InputWrapper gridColumn=\"4 / 10\">\n              <RedButton small minWidth=\"100%\">\n                Add / Edit\n              </RedButton>\n            </InputWrapper>\n          </GridWrapper>\n          <GridWrapper minWidth=\"508px\" maxWidth=\"508px\" margin=\"20px 0 0 0 \">\n            {drives.map(drive => (\n              <FlexWrapper key={drive.id} padding=\" 0 10px\" gridColumn=\"span 3\">\n                <TextLink\n                  as={Link}\n                  className=\"hover\"\n                  fontSize=\"18px\"\n                  margin=\"0 10px 0 0\"\n                >\n                  {drive.drive.driveNumber}\n                </TextLink>\n                <Typography fontColor={darkGrey}>\n                  {drive.drive.driveCapacityGb}\n                </Typography>\n              </FlexWrapper>\n            ))}\n          </GridWrapper>\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}