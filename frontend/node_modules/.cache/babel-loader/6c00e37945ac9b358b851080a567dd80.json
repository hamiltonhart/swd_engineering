{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/EditDriveForm.js\";\nimport React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\nimport { Button, ClickAwayListener } from \"@material-ui/core\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_DRIVE, DELETE_DRIVE, RELEASE_DRIVE, HOME_PAGE_QUERY, ALL_DRIVES_QUERY } from \"../../gql\";\nexport const EditDriveForm = ({\n  toggle,\n  driveId,\n  drive\n}) => {\n  const [updateDrive, {\n    error: updateError\n  }] = useMutation(UPDATE_DRIVE);\n  const [deleteDrive, {\n    error: deleteError\n  }] = useMutation(DELETE_DRIVE);\n  const [releaseDrive, {\n    error: releaseError\n  }] = useMutation(RELEASE_DRIVE);\n  const [driveNumber, setDriveNumber] = useState(`${drive.driveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(drive.driveCapacityGb);\n  const [releaseActive, setReleaseActive] = useState(false);\n  const [deleteActive, setDeleteActive] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateDrive({\n      variables: {\n        id: driveId,\n        driveNumber,\n        driveCapacityGb\n      },\n      onCompleted: editDriveCompleted()\n    });\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n    deleteDrive({\n      variables: {\n        driveId\n      },\n      refetchQueries: [{\n        query: ALL_DRIVES_QUERY\n      }, {\n        query: HOME_PAGE_QUERY\n      }],\n      onCompleted: deleteDriveCompleted()\n    });\n  };\n\n  const handleRelease = e => {\n    e.preventDefault();\n    console.log(`Release Drive: ${driveId}`);\n    releaseDrive({\n      variables: {\n        driveId\n      },\n      refetchQueries: [{\n        query: ALL_DRIVES_QUERY\n      }, {\n        query: HOME_PAGE_QUERY\n      }],\n      onCompleted: releaseDriveCompleted()\n    });\n  };\n\n  const editDriveCompleted = () => {\n    toggle();\n  };\n\n  const deleteDriveCompleted = () => {\n    toggle();\n  };\n\n  const releaseDriveCompleted = () => {\n    toggle();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FlexWrapper, {\n    as: \"form\",\n    minWidth: \"350px\",\n    maxWidth: \"350px\",\n    justifyContent: \"space-evenly\",\n    margin: \"0 0 0 0 \",\n    padding: \"30px 20px 20px 30px\",\n    rowGap: \"30px\",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    gridColumn: \"4/6\",\n    maxWidth: \"100px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Number \", React.createElement(Required, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"*\")), React.createElement(Input, {\n    placeholder: \"1\",\n    value: driveNumber,\n    onChange: e => setDriveNumber(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    gridColumn: \"6/8\",\n    maxWidth: \"100px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Capacity \", React.createElement(Required, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"*\")), React.createElement(Select, {\n    defaultValue: driveCapacityGb,\n    padding: \"16px 18px\",\n    onChange: e => setDriveCapacityGb(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"250GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"250GB\"), React.createElement(\"option\", {\n    value: \"500GB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"500GB\"), React.createElement(\"option\", {\n    value: \"1TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"1TB\"), React.createElement(\"option\", {\n    value: \"2TB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"2TB\"))), React.createElement(InputWrapper, {\n    gridColumn: \"4 / 10\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    size: \"large\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !driveNumber.trim() || !driveCapacityGb || releaseActive || deleteActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, `Edit Drive ${drive.driveNumber}`)), deleteActive ? React.createElement(ClickAwayListener, {\n    onClickAway: () => setDeleteActive(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: e => handleDelete(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Delete Drive\")) : React.createElement(Button, {\n    color: \"primary\",\n    disabled: releaseActive,\n    variant: \"outlined\",\n    onClick: e => setDeleteActive(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Delete Drive\"), drive.rentalProjects.length > 0 && React.createElement(ReleaseDriveButtons, {\n    releaseActive: releaseActive,\n    setReleaseActive: setReleaseActive,\n    deleteActive: deleteActive,\n    handleRelease: handleRelease,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })));\n}; // const ReleaseDriveButtons = ({\n//   releaseActive,\n//   setReleaseActive,\n//   deleteActive,\n//   handleRelease\n// }) =>\n//   releaseActive ? (\n//     <ClickAwayListener onClickAway={() => setReleaseActive(false)}>\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         onClick={e => handleRelease(e)}\n//       >\n//         Release Drive\n//       </Button>\n//     </ClickAwayListener>\n//   ) : (\n//     <Button\n//       color=\"primary\"\n//       variant=\"outlined\"\n//       disabled={deleteActive}\n//       onClick={e => setReleaseActive(true)}\n//     >\n//       Release Drive\n//     </Button>\n//   );","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/EditDriveForm.js"],"names":["React","useState","InputWrapper","FlexWrapper","Input","Label","Select","Required","Button","ClickAwayListener","useMutation","UPDATE_DRIVE","DELETE_DRIVE","RELEASE_DRIVE","HOME_PAGE_QUERY","ALL_DRIVES_QUERY","EditDriveForm","toggle","driveId","drive","updateDrive","error","updateError","deleteDrive","deleteError","releaseDrive","releaseError","driveNumber","setDriveNumber","driveCapacityGb","setDriveCapacityGb","releaseActive","setReleaseActive","deleteActive","setDeleteActive","handleSubmit","e","preventDefault","variables","id","onCompleted","editDriveCompleted","handleDelete","refetchQueries","query","deleteDriveCompleted","handleRelease","console","log","releaseDriveCompleted","target","value","trim","rentalProjects","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\n\nimport { Button, ClickAwayListener } from \"@material-ui/core\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport {\n  UPDATE_DRIVE,\n  DELETE_DRIVE,\n  RELEASE_DRIVE,\n  HOME_PAGE_QUERY,\n  ALL_DRIVES_QUERY,\n} from \"../../gql\";\n\nexport const EditDriveForm = ({ toggle, driveId, drive }) => {\n  const [updateDrive, { error: updateError }] = useMutation(UPDATE_DRIVE);\n  const [deleteDrive, { error: deleteError }] = useMutation(DELETE_DRIVE);\n  const [releaseDrive, { error: releaseError }] = useMutation(RELEASE_DRIVE);\n\n  const [driveNumber, setDriveNumber] = useState(`${drive.driveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(drive.driveCapacityGb);\n  const [releaseActive, setReleaseActive] = useState(false);\n  const [deleteActive, setDeleteActive] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateDrive({\n      variables: {\n        id: driveId,\n        driveNumber,\n        driveCapacityGb,\n      },\n      onCompleted: editDriveCompleted(),\n    });\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteDrive({\n      variables: { driveId },\n      refetchQueries: [{ query: ALL_DRIVES_QUERY }, { query: HOME_PAGE_QUERY }],\n      onCompleted: deleteDriveCompleted(),\n    });\n  };\n\n  const handleRelease = (e) => {\n    e.preventDefault();\n    console.log(`Release Drive: ${driveId}`);\n    releaseDrive({\n      variables: { driveId },\n      refetchQueries: [{ query: ALL_DRIVES_QUERY }, { query: HOME_PAGE_QUERY }],\n      onCompleted: releaseDriveCompleted(),\n    });\n  };\n\n  const editDriveCompleted = () => {\n    toggle();\n  };\n\n  const deleteDriveCompleted = () => {\n    toggle();\n  };\n\n  const releaseDriveCompleted = () => {\n    toggle();\n  };\n\n  return (\n    <>\n      <FlexWrapper\n        as=\"form\"\n        minWidth=\"350px\"\n        maxWidth=\"350px\"\n        justifyContent=\"space-evenly\"\n        margin=\"0 0 0 0 \"\n        padding=\"30px 20px 20px 30px\"\n        rowGap=\"30px\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <InputWrapper gridColumn=\"4/6\" maxWidth=\"100px\">\n          <Label>\n            Number <Required>*</Required>\n          </Label>\n          <Input\n            placeholder=\"1\"\n            value={driveNumber}\n            onChange={(e) => setDriveNumber(e.target.value)}\n          />\n        </InputWrapper>\n\n        <InputWrapper gridColumn=\"6/8\" maxWidth=\"100px\">\n          <Label>\n            Capacity <Required>*</Required>\n          </Label>\n          <Select\n            defaultValue={driveCapacityGb}\n            padding=\"16px 18px\"\n            onChange={(e) => setDriveCapacityGb(e.target.value)}\n          >\n            <option value=\"250GB\">250GB</option>\n            <option value=\"500GB\">500GB</option>\n            <option value=\"1TB\">1TB</option>\n            <option value=\"2TB\">2TB</option>\n          </Select>\n        </InputWrapper>\n\n        <InputWrapper gridColumn=\"4 / 10\" width=\"100%\">\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !driveNumber.trim() ||\n              !driveCapacityGb ||\n              releaseActive ||\n              deleteActive\n            }\n          >\n            {`Edit Drive ${drive.driveNumber}`}\n          </Button>\n        </InputWrapper>\n        {deleteActive ? (\n          <ClickAwayListener onClickAway={() => setDeleteActive(false)}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={(e) => handleDelete(e)}\n            >\n              Delete Drive\n            </Button>\n          </ClickAwayListener>\n        ) : (\n          <Button\n            color=\"primary\"\n            disabled={releaseActive}\n            variant=\"outlined\"\n            onClick={(e) => setDeleteActive(true)}\n          >\n            Delete Drive\n          </Button>\n        )}\n        {drive.rentalProjects.length > 0 && (\n          <ReleaseDriveButtons\n            releaseActive={releaseActive}\n            setReleaseActive={setReleaseActive}\n            deleteActive={deleteActive}\n            handleRelease={handleRelease}\n          />\n        )}\n      </FlexWrapper>\n    </>\n  );\n};\n\n// const ReleaseDriveButtons = ({\n//   releaseActive,\n//   setReleaseActive,\n//   deleteActive,\n//   handleRelease\n// }) =>\n//   releaseActive ? (\n//     <ClickAwayListener onClickAway={() => setReleaseActive(false)}>\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         onClick={e => handleRelease(e)}\n//       >\n//         Release Drive\n//       </Button>\n//     </ClickAwayListener>\n//   ) : (\n//     <Button\n//       color=\"primary\"\n//       variant=\"outlined\"\n//       disabled={deleteActive}\n//       onClick={e => setReleaseActive(true)}\n//     >\n//       Release Drive\n//     </Button>\n//   );\n"]},"metadata":{},"sourceType":"module"}