{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/pages/ContactsListPage.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_CONTACTS_QUERY } from \"../gql\";\nimport { makeStyles, InputLabel, MenuItem, Select, OutlinedInput } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { MainWrapper, PageHeadingWrapper, FlexWrapper, InputWrapper } from \"../styled/containers\";\nimport { PageHeading } from \"../styled/typography\";\nimport { NewContactModal, SortedContactListCards } from \"../components/Contacts\";\nimport { ContactsListToolbar } from \"../components/Contacts/ContactUtilities\";\nconst useStyles = makeStyles({\n  cardActionHeading: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    margin: \"20px 10px\"\n  },\n  select: {\n    minWidth: \"212px\"\n  },\n  label: {\n    paddingLeft: \"12px\"\n  },\n  search: {}\n});\nconst ContactsToolbarContext = React.createContext();\n\nconst ContactsListPage = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [sortValue, setSortValue] = useState(\"first-name\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_CONTACTS_QUERY);\n  const toolbarContext = {\n    searchContext: {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    },\n    sortContext: {\n      sortValue: sortValue,\n      setSortValue: setSortValue\n    }\n  };\n  const classes = useStyles();\n  return React.createElement(MainWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, loading && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Loading...\"), error && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, error.message), data && React.createElement(React.Fragment, null, React.createElement(PageHeadingWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Contacts\")), React.createElement(\"div\", {\n    className: classes.cardActionHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(NewContactModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(ContactsToolbarContext.Provider, {\n    value: toolbarContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(ContactsListToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(SortedContactListCards, {\n    contacts: data.contacts,\n    sortBy: sortValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nexport default ContactsListPage;","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/pages/ContactsListPage.js"],"names":["React","useState","useQuery","ALL_CONTACTS_QUERY","makeStyles","InputLabel","MenuItem","Select","OutlinedInput","SearchIcon","MainWrapper","PageHeadingWrapper","FlexWrapper","InputWrapper","PageHeading","NewContactModal","SortedContactListCards","ContactsListToolbar","useStyles","cardActionHeading","display","justifyContent","margin","select","minWidth","label","paddingLeft","search","ContactsToolbarContext","createContext","ContactsListPage","searchValue","setSearchValue","sortValue","setSortValue","data","loading","error","toolbarContext","searchContext","sortContext","classes","message","contacts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,SACEC,UADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,MAJF,EAKEC,aALF,QAMO,mBANP;AAQA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SACEC,WADF,EAEEC,kBAFF,EAGEC,WAHF,EAIEC,YAJF,QAKO,sBALP;AAMA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SACEC,eADF,EAEEC,sBAFF,QAGO,wBAHP;AAKA,SAASC,mBAAT,QAAoC,yCAApC;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,OAAO,EAAE,MADQ;AAEjBC,IAAAA,cAAc,EAAE,UAFC;AAGjBC,IAAAA,MAAM,EAAE;AAHS,GADQ;AAM3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GANmB;AAS3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GAToB;AAY3BC,EAAAA,MAAM,EAAE;AAZmB,CAAD,CAA5B;AAeA,MAAMC,sBAAsB,GAAG5B,KAAK,CAAC6B,aAAN,EAA/B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAAC,YAAD,CAA1C;AAEA,QAAM;AAAEkC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BnC,QAAQ,CAACC,kBAAD,CAAzC;AAEA,QAAMmC,cAAc,GAAG;AACrBC,IAAAA,aAAa,EAAE;AACbR,MAAAA,WAAW,EAAEA,WADA;AAEbC,MAAAA,cAAc,EAAEA;AAFH,KADM;AAKrBQ,IAAAA,WAAW,EAAE;AACXP,MAAAA,SAAS,EAAEA,SADA;AAEXC,MAAAA,YAAY,EAAEA;AAFH;AALQ,GAAvB;AAWA,QAAMO,OAAO,GAAGvB,SAAS,EAAzB;AAEA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACK,OAAX,CAFZ,EAGGP,IAAI,IACH,0CACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACtB,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEmB,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAWE,oBAAC,sBAAD;AAAwB,IAAA,QAAQ,EAAEH,IAAI,CAACQ,QAAvC;AAAiD,IAAA,MAAM,EAAEV,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAJJ,CADF;AAqBD,CAxCD;;AA0CA,eAAeH,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { ALL_CONTACTS_QUERY } from \"../gql\";\n\nimport {\n  makeStyles,\n  InputLabel,\n  MenuItem,\n  Select,\n  OutlinedInput,\n} from \"@material-ui/core\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport {\n  MainWrapper,\n  PageHeadingWrapper,\n  FlexWrapper,\n  InputWrapper,\n} from \"../styled/containers\";\nimport { PageHeading } from \"../styled/typography\";\n\nimport {\n  NewContactModal,\n  SortedContactListCards,\n} from \"../components/Contacts\";\n\nimport { ContactsListToolbar } from \"../components/Contacts/ContactUtilities\";\n\nconst useStyles = makeStyles({\n  cardActionHeading: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    margin: \"20px 10px\",\n  },\n  select: {\n    minWidth: \"212px\",\n  },\n  label: {\n    paddingLeft: \"12px\",\n  },\n  search: {},\n});\n\nconst ContactsToolbarContext = React.createContext();\n\nconst ContactsListPage = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [sortValue, setSortValue] = useState(\"first-name\");\n\n  const { data, loading, error } = useQuery(ALL_CONTACTS_QUERY);\n\n  const toolbarContext = {\n    searchContext: {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue,\n    },\n    sortContext: {\n      sortValue: sortValue,\n      setSortValue: setSortValue,\n    },\n  };\n\n  const classes = useStyles();\n\n  return (\n    <MainWrapper>\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>{error.message}</h1>}\n      {data && (\n        <>\n          <PageHeadingWrapper>\n            <PageHeading>Contacts</PageHeading>\n          </PageHeadingWrapper>\n          <div className={classes.cardActionHeading}>\n            <NewContactModal />\n          </div>\n          <ContactsToolbarContext.Provider value={toolbarContext}>\n            <ContactsListToolbar />\n          </ContactsToolbarContext.Provider>\n\n          <SortedContactListCards contacts={data.contacts} sortBy={sortValue} />\n        </>\n      )}\n    </MainWrapper>\n  );\n};\n\nexport default ContactsListPage;\n"]},"metadata":{},"sourceType":"module"}