{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/NewDriveModal.js\";\nimport React from \"react\";\nimport { useModal } from \"../../utils\";\nimport { NewDriveForm } from \"./NewDriveForm\";\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { PositionWrapper } from \"../../styled/containers\";\nimport { RedButton, RoundButton } from \"../../styled/buttons\";\nimport { makeStyles, CircularProgress, Button } from \"@material-ui/core\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_LAST_DRIVE } from \"../../gql\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold\n  },\n  form: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport const NewDriveModal = () => {\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_LAST_DRIVE);\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    large: true,\n    onClick: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"New Drive\"), React.createElement(Modal, {\n    isShowing: isShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(ModalArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ModalCloseIcon, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(PageHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Add Drives\"), loading && React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(NewDriveForm, {\n    className: classes.form,\n    toggle: toggle,\n    nextDriveNumber: data && data.lastDrive.driveNumber || \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/NewDriveModal.js"],"names":["React","useModal","NewDriveForm","Modal","ModalArea","ModalCloseIcon","PageHeading","PositionWrapper","RedButton","RoundButton","makeStyles","CircularProgress","Button","useQuery","GET_LAST_DRIVE","useStyles","theme","button","fontWeight","typography","fontWeightBold","form","marginTop","spacing","NewDriveModal","isShowing","toggle","data","loading","error","classes","lastDrive","driveNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,cAA3B,QAAiD,cAAjD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,sBAAvC;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,MAAvC,QAAqD,mBAArD;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAEF,KAAK,CAACG,UAAN,CAAiBC;AADvB,GAD+B;AAIvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AADP;AAJiC,CAAZ,CAAD,CAA5B;AASA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBzB,QAAQ,EAAtC;AAEA,QAAM;AAAE0B,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BhB,QAAQ,CAACC,cAAD,CAAzC;AAEA,QAAMgB,OAAO,GAAGf,SAAS,EAAzB;AACA,SACE,0CACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEe,OAAO,CAACb,MADrB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,OAAO,EAAE,MAAMS,MAAM,EALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAWE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAED,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGE,OAAO,IAAI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHd,EAIE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEE,OAAO,CAACT,IADrB;AAEE,IAAA,MAAM,EAAEK,MAFV;AAGE,IAAA,eAAe,EAAGC,IAAI,IAAIA,IAAI,CAACI,SAAL,CAAeC,WAAxB,IAAwC,GAH3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAXF,CADF;AA0BD,CAhCM","sourcesContent":["import React from \"react\";\nimport { useModal } from \"../../utils\";\nimport { NewDriveForm } from \"./NewDriveForm\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport { PositionWrapper } from \"../../styled/containers\";\n\nimport { RedButton, RoundButton } from \"../../styled/buttons\";\nimport { makeStyles, CircularProgress, Button } from \"@material-ui/core\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_LAST_DRIVE } from \"../../gql\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  form: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const NewDriveModal = () => {\n  const { isShowing, toggle } = useModal();\n\n  const { data, loading, error } = useQuery(GET_LAST_DRIVE);\n\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        large\n        onClick={() => toggle()}\n      >\n        New Drive\n      </Button>\n\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n          <PageHeading>Add Drives</PageHeading>\n          {loading && <CircularProgress />}\n          <NewDriveForm\n            className={classes.form}\n            toggle={toggle}\n            nextDriveNumber={(data && data.lastDrive.driveNumber) || \"1\"}\n          />\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}