{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactList.js\";\nimport React, { useState, useContext } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\nimport { useSortContactAlpha, useContactSearch, useToggle } from \"../../utils\";\nimport { ContactsToolbarContext } from \"../../pages/ContactsListPage\";\nimport { ContactListItem } from \"./ContactListItem\";\nimport { ContactDetail } from \"./ContactDetail\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: \"80%\",\n    borderRadius: theme.shape.borderRadius,\n    height: \"500px\",\n    boxShadow: theme.shadows[2],\n    \"& > div\": {\n      borderRadius: 0\n    }\n  },\n  contactList: {\n    minWidth: \"300px\",\n    boxShadow: \"none\",\n    borderRightStyle: \"solid\",\n    borderColor: theme.palette.grey[400],\n    borderWidth: \"1px\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    overflowY: \"auto\",\n    \"& :hover\": {\n      backgroundColor: theme.palette.grey[400]\n    }\n  },\n  contactInfo: {\n    flexGrow: 1,\n    minHeight: \"300px\",\n    overflowY: \"auto\"\n  }\n}));\nexport const ContactList = ({\n  contacts\n}) => {\n  const [selected, setSelected] = useState(1);\n  const {\n    searchContext,\n    sortContext\n  } = useContext(ContactsToolbarContext);\n  let contactsList = useContactSearch(contacts, searchContext.searchValue.toLowerCase());\n  contactsList = useSortContactAlpha(contactsList, sortContext.sortValue);\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.contactList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, contactsList.map(contact => React.createElement(ContactListItem, {\n    key: contact.id,\n    contact: contact,\n    setSelected: setSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(Paper, {\n    className: classes.contactInfo,\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ContactDetail, {\n    contactId: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/ContactList.js"],"names":["React","useState","useContext","makeStyles","Paper","useSortContactAlpha","useContactSearch","useToggle","ContactsToolbarContext","ContactListItem","ContactDetail","useStyles","theme","root","display","justifyContent","marginTop","spacing","marginLeft","marginRight","maxWidth","borderRadius","shape","height","boxShadow","shadows","contactList","minWidth","borderRightStyle","borderColor","palette","grey","borderWidth","paddingTop","paddingBottom","overflowY","backgroundColor","contactInfo","flexGrow","minHeight","ContactList","contacts","selected","setSelected","searchContext","sortContext","contactsList","searchValue","toLowerCase","sortValue","classes","map","contact","id"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nimport { useSortContactAlpha, useContactSearch, useToggle } from \"../../utils\";\nimport { ContactsToolbarContext } from \"../../pages/ContactsListPage\";\nimport { ContactListItem } from \"./ContactListItem\";\nimport { ContactDetail } from \"./ContactDetail\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: \"80%\",\n    borderRadius: theme.shape.borderRadius,\n    height: \"500px\",\n    boxShadow: theme.shadows[2],\n    \"& > div\": {\n      borderRadius: 0,\n    },\n  },\n  contactList: {\n    minWidth: \"300px\",\n    boxShadow: \"none\",\n    borderRightStyle: \"solid\",\n    borderColor: theme.palette.grey[400],\n    borderWidth: \"1px\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    overflowY: \"auto\",\n    \"& :hover\": {\n      backgroundColor: theme.palette.grey[400],\n    },\n  },\n  contactInfo: {\n    flexGrow: 1,\n    minHeight: \"300px\",\n    overflowY: \"auto\",\n  },\n}));\n\nexport const ContactList = ({ contacts }) => {\n  const [selected, setSelected] = useState(1);\n  const { searchContext, sortContext } = useContext(ContactsToolbarContext);\n\n  let contactsList = useContactSearch(\n    contacts,\n    searchContext.searchValue.toLowerCase()\n  );\n  contactsList = useSortContactAlpha(contactsList, sortContext.sortValue);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.contactList}>\n        {contactsList.map((contact) => (\n          <ContactListItem\n            key={contact.id}\n            contact={contact}\n            setSelected={setSelected}\n          />\n        ))}\n      </Paper>\n      <Paper className={classes.contactInfo} elevation={0}>\n        <ContactDetail contactId={selected} />\n      </Paper>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}