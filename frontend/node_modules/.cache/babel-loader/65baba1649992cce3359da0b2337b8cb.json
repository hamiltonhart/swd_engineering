{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  {\\n    isLoggedIn @client\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";import*as serviceWorker from\"./serviceWorker\";import{ThemeProvider}from\"@material-ui/core/styles\";import theme from\"./styling/theme\";import{Query,ApolloProvider}from\"react-apollo\";// import { useQuery } from \"@apollo/react-hooks\";\nimport ApolloClient,{gql}from\"apollo-boost\";import{InMemoryCache}from\"apollo-cache-inmemory\";import{Login}from\"./pages/Login\";var cache=new InMemoryCache();// const link = new HttpLink({\n//   uri: \"http://127.0.0.1:8000/graphql/\"\n// });\nvar client=new ApolloClient({cache:cache,uri:\"http://127.0.0.1:8000/graphql/\",fetchOptions:{credentials:\"include\"},request:function request(operation){var token=localStorage.getItem(\"authToken\")||\"\";operation.setContext({headers:{Authorization:\"JWT \".concat(token)}});},clientState:{defaults:{isLoggedIn:!!localStorage.getItem(\"authToken\")}}});var IS_LOGGED_IN=gql(_templateObject());ReactDOM.render(React.createElement(ApolloProvider,{client:client},React.createElement(ThemeProvider,{theme:theme},React.createElement(Query,{query:IS_LOGGED_IN},function(_ref){var data=_ref.data;return data.isLoggedIn?React.createElement(App,null):React.createElement(Login,null);}))),document.getElementById(\"root\"));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ThemeProvider","theme","Query","ApolloProvider","ApolloClient","gql","InMemoryCache","Login","cache","client","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","Authorization","clientState","defaults","isLoggedIn","IS_LOGGED_IN","render","data","document","getElementById","unregister"],"mappings":"8VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CAEA,OAASC,aAAT,KAA8B,0BAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CAEA,OAASC,KAAT,CAAgBC,cAAhB,KAAsC,cAAtC,CACA;AACA,MAAOC,CAAAA,YAAP,EAAuBC,GAAvB,KAAkC,cAAlC,CACA,OAASC,aAAT,KAA8B,uBAA9B,CAEA,OAASC,KAAT,KAAsB,eAAtB,CAEA,GAAMC,CAAAA,KAAK,CAAG,GAAIF,CAAAA,aAAJ,EAAd,CACA;AACA;AACA;AAEA,GAAMG,CAAAA,MAAM,CAAG,GAAIL,CAAAA,YAAJ,CAAiB,CAC9BI,KAAK,CAALA,KAD8B,CAE9BE,GAAG,CAAE,gCAFyB,CAG9BC,YAAY,CAAE,CACZC,WAAW,CAAE,SADD,CAHgB,CAM9BC,OAAO,CAAE,iBAAAC,SAAS,CAAI,CACpB,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,GAAqC,EAAnD,CACAH,SAAS,CAACI,UAAV,CAAqB,CACnBC,OAAO,CAAE,CACPC,aAAa,eAASL,KAAT,CADN,CADU,CAArB,EAKD,CAb6B,CAc9BM,WAAW,CAAE,CACXC,QAAQ,CAAE,CACRC,UAAU,CAAE,CAAC,CAACP,YAAY,CAACC,OAAb,CAAqB,WAArB,CADN,CADC,CAdiB,CAAjB,CAAf,CAqBA,GAAMO,CAAAA,YAAY,CAAGnB,GAAH,mBAAlB,CAMAR,QAAQ,CAAC4B,MAAT,CACE,oBAAC,cAAD,EAAgB,MAAM,CAAEhB,MAAxB,EACE,oBAAC,aAAD,EAAe,KAAK,CAAER,KAAtB,EACE,oBAAC,KAAD,EAAO,KAAK,CAAEuB,YAAd,EACG,kBAAGE,CAAAA,IAAH,MAAGA,IAAH,OAAeA,CAAAA,IAAI,CAACH,UAAL,CAAkB,oBAAC,GAAD,MAAlB,CAA4B,oBAAC,KAAD,MAA3C,EADH,CADF,CADF,CADF,CASEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF,EAYA;AACA;AACA;AACA7B,aAAa,CAAC8B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./styling/theme\";\n\nimport { Query, ApolloProvider } from \"react-apollo\";\n// import { useQuery } from \"@apollo/react-hooks\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { Login } from \"./pages/Login\";\n\nconst cache = new InMemoryCache();\n// const link = new HttpLink({\n//   uri: \"http://127.0.0.1:8000/graphql/\"\n// });\n\nconst client = new ApolloClient({\n  cache,\n  uri: \"http://127.0.0.1:8000/graphql/\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"authToken\") || \"\";\n    operation.setContext({\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    });\n  },\n  clientState: {\n    defaults: {\n      isLoggedIn: !!localStorage.getItem(\"authToken\")\n    }\n  }\n});\n\nconst IS_LOGGED_IN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <Query query={IS_LOGGED_IN}>\n        {({ data }) => (data.isLoggedIn ? <App /> : <Login />)}\n      </Query>\n    </ThemeProvider>\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}