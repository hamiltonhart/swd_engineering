{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{InputWrapper,FlexWrapper}from\"../../styled/containers\";import{Input,Label,Select,Required}from\"../../styled/forms\";import{Button}from\"@material-ui/core\";import{useMutation}from\"@apollo/react-hooks\";import{CREATE_DRIVE,ALL_DRIVES_QUERY,HOME_PAGE_QUERY}from\"../../gql\";export var NewDriveForm=function NewDriveForm(_ref){var toggle=_ref.toggle,nextDriveNumber=_ref.nextDriveNumber;var _useMutation=useMutation(CREATE_DRIVE),_useMutation2=_slicedToArray(_useMutation,2),createDrive=_useMutation2[0],createError=_useMutation2[1].error;var _useState=useState(\"\".concat(nextDriveNumber)),_useState2=_slicedToArray(_useState,2),driveNumber=_useState2[0],setDriveNumber=_useState2[1];var _useState3=useState(\"2TB\"),_useState4=_slicedToArray(_useState3,2),driveCapacityGb=_useState4[0],setDriveCapacityGb=_useState4[1];var _useState5=useState(\"1\"),_useState6=_slicedToArray(_useState5,2),numberOfDrives=_useState6[0],setNumberOfDrives=_useState6[1];var handleSubmit=function handleSubmit(e){e.preventDefault();createDrive({variables:{driveNumber:driveNumber,driveCapacityGb:driveCapacityGb,numberOfDrives:numberOfDrives},refetchQueries:[{query:ALL_DRIVES_QUERY},{query:HOME_PAGE_QUERY}],onCompleted:createDriveCompleted()});};var createDriveCompleted=function createDriveCompleted(){toggle();};return React.createElement(React.Fragment,null,React.createElement(FlexWrapper,{as:\"form\",minWidth:\"350px\",maxWidth:\"350px\",justifyContent:\"space-evenly\",margin:\"0 0 0 0 \",padding:\"30px 20px 20px 30px\",rowGap:\"30px\",onSubmit:function onSubmit(e){return handleSubmit(e);}},React.createElement(InputWrapper,{gridColumn:\"4/6\",maxWidth:\"100px\"},React.createElement(Label,null,\"Number \",React.createElement(Required,null,\"*\")),React.createElement(Input,{placeholder:\"1\",value:driveNumber,onChange:function onChange(e){return setDriveNumber(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"6/8\",maxWidth:\"100px\"},React.createElement(Label,null,\"Capacity \",React.createElement(Required,null,\"*\")),React.createElement(Select,{defaultValue:driveCapacityGb,padding:\"16px 18px\",onChange:function onChange(e){return setDriveCapacityGb(e.target.value);}},React.createElement(\"option\",{value:\"250GB\"},\"250GB\"),React.createElement(\"option\",{value:\"500GB\"},\"500GB\"),React.createElement(\"option\",{value:\"1TB\"},\"1TB\"),React.createElement(\"option\",{value:\"2TB\"},\"2TB\"))),React.createElement(InputWrapper,{gridColumn:\"8/10\",maxWidth:\"100px\"},React.createElement(Label,null,\"Quantity \",React.createElement(Required,null,\"*\")),React.createElement(Input,{placeholder:\"1\",value:numberOfDrives,onChange:function onChange(e){return setNumberOfDrives(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"4 / 10\",width:\"100%\"},React.createElement(Button,{type:\"submit\",size:\"large\",fullWidth:true,variant:\"contained\",color:\"primary\",disabled:!driveNumber.trim()||!driveCapacityGb|!numberOfDrives.trim()},\"Create Drives\"))));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/NewDriveForm.js"],"names":["React","useState","InputWrapper","FlexWrapper","Input","Label","Select","Required","Button","useMutation","CREATE_DRIVE","ALL_DRIVES_QUERY","HOME_PAGE_QUERY","NewDriveForm","toggle","nextDriveNumber","createDrive","createError","error","driveNumber","setDriveNumber","driveCapacityGb","setDriveCapacityGb","numberOfDrives","setNumberOfDrives","handleSubmit","e","preventDefault","variables","refetchQueries","query","onCompleted","createDriveCompleted","target","value","trim"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { InputWrapper, FlexWrapper } from \"../../styled/containers\";\nimport { Input, Label, Select, Required } from \"../../styled/forms\";\n\nimport { Button } from \"@material-ui/core\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_DRIVE, ALL_DRIVES_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\n\nexport const NewDriveForm = ({ toggle, nextDriveNumber }) => {\n  const [createDrive, { error: createError }] = useMutation(CREATE_DRIVE);\n\n  const [driveNumber, setDriveNumber] = useState(`${nextDriveNumber}`);\n  const [driveCapacityGb, setDriveCapacityGb] = useState(\"2TB\");\n  const [numberOfDrives, setNumberOfDrives] = useState(\"1\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createDrive({\n      variables: {\n        driveNumber,\n        driveCapacityGb,\n        numberOfDrives\n      },\n      refetchQueries: [{ query: ALL_DRIVES_QUERY }, { query: HOME_PAGE_QUERY }],\n      onCompleted: createDriveCompleted()\n    });\n  };\n\n  const createDriveCompleted = () => {\n    toggle();\n  };\n\n  return (\n    <>\n      <FlexWrapper\n        as=\"form\"\n        minWidth=\"350px\"\n        maxWidth=\"350px\"\n        justifyContent=\"space-evenly\"\n        margin=\"0 0 0 0 \"\n        padding=\"30px 20px 20px 30px\"\n        rowGap=\"30px\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <InputWrapper gridColumn=\"4/6\" maxWidth=\"100px\">\n          <Label>\n            Number <Required>*</Required>\n          </Label>\n          <Input\n            placeholder=\"1\"\n            value={driveNumber}\n            onChange={e => setDriveNumber(e.target.value)}\n          />\n        </InputWrapper>\n\n        <InputWrapper gridColumn=\"6/8\" maxWidth=\"100px\">\n          <Label>\n            Capacity <Required>*</Required>\n          </Label>\n          <Select\n            defaultValue={driveCapacityGb}\n            padding=\"16px 18px\"\n            onChange={e => setDriveCapacityGb(e.target.value)}\n          >\n            <option value=\"250GB\">250GB</option>\n            <option value=\"500GB\">500GB</option>\n            <option value=\"1TB\">1TB</option>\n            <option value=\"2TB\">2TB</option>\n          </Select>\n        </InputWrapper>\n\n        <InputWrapper gridColumn=\"8/10\" maxWidth=\"100px\">\n          <Label>\n            Quantity <Required>*</Required>\n          </Label>\n          <Input\n            placeholder=\"1\"\n            value={numberOfDrives}\n            onChange={e => setNumberOfDrives(e.target.value)}\n          />\n        </InputWrapper>\n        <InputWrapper gridColumn=\"4 / 10\" width=\"100%\">\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !driveNumber.trim() || !driveCapacityGb | !numberOfDrives.trim()\n            }\n          >\n            Create Drives\n          </Button>\n        </InputWrapper>\n      </FlexWrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}