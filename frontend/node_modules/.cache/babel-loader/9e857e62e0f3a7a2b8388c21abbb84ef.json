{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import InputMask from\"react-input-mask\";import{useModal}from\"../../utils\";import{useMutation}from\"@apollo/react-hooks\";import{CREATE_CONTACT,ALL_CONTACTS_QUERY,HOME_PAGE_QUERY}from\"../../gql\";import{Button}from\"@material-ui/core\";import{Modal,ModalArea,ModalCloseIcon}from\"../utilities\";import{PageHeading}from\"../../styled/typography\";import{GridWrapper,InputWrapper,PositionWrapper}from\"../../styled/containers\";import{Input,Label,Select,Textarea,Required}from\"../../styled/forms\";import{RedButton,InactiveButton,RoundButton,BlackButton}from\"../../styled/buttons\";import{Error}from\"../global\";export var NewContactModal=function NewContactModal(_ref){var redButton=_ref.redButton,roundButton=_ref.roundButton,blackButton=_ref.blackButton;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),firstName=_useState2[0],setFirstName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),lastName=_useState4[0],setLastName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),company=_useState6[0],setCompany=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),title=_useState8[0],setTitle=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),phone=_useState10[0],setPhone=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),email=_useState12[0],setEmail=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),notes=_useState14[0],setNotes=_useState14[1];var _useModal=useModal(),isShowing=_useModal.isShowing,toggle=_useModal.toggle;var _useMutation=useMutation(CREATE_CONTACT),_useMutation2=_slicedToArray(_useMutation,2),createContact=_useMutation2[0],error=_useMutation2[1].error;var formSubmit=function formSubmit(e,firstName,lastName,company,title,phone,email,notes){e.preventDefault();createContact({variables:{firstName:firstName,lastName:lastName,company:company,title:title,email:email,notes:notes,phoneNumber:phone},refetchQueries:[{query:ALL_CONTACTS_QUERY},{query:HOME_PAGE_QUERY,variables:{limit:8,reverse:true}}],onCompleted:createCompleted()});};var createCompleted=function createCompleted(){setFirstName(\"\");setLastName(\"\");setCompany(\"\");setTitle(\"\");setPhone(\"\");setEmail(\"\");setNotes(\"\");toggle();};return React.createElement(React.Fragment,null,redButton&&React.createElement(RedButton,{small:true,onClick:function onClick(){return toggle();}},\"New Contact\"),blackButton&&React.createElement(Button,{size:\"small\",color:\"secondary\",variant:\"contained\",onClick:function onClick(){return toggle();}},\"New Contact\"),roundButton&&React.createElement(PositionWrapper,{position:\"fixed\",bottom:\"5%\",right:\"4%\"},React.createElement(RoundButton,{onClick:function onClick(){return toggle();}},\"+\")),React.createElement(Modal,{isShowing:isShowing},React.createElement(ModalArea,null,React.createElement(ModalCloseIcon,{toggle:toggle}),React.createElement(PageHeading,null,\"New Contact\"),React.createElement(GridWrapper,{as:\"form\",minWidth:\"622px;\",maxWidth:\"622px;\",margin:\"20px 0 0 0 \",onSubmit:function onSubmit(e){return formSubmit(e,firstName,lastName,company,title,phone,email,notes);}},React.createElement(InputWrapper,{gridColumn:\"span 6\"},React.createElement(Label,null,\"FirstName \",React.createElement(Required,null,\"*\")),React.createElement(Input,{placeholder:\"John (required)\",value:firstName,required:true,onChange:function onChange(e){return setFirstName(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"span 6\"},React.createElement(Label,null,\"LastName \",React.createElement(Required,null,\"*\")),React.createElement(Input,{placeholder:\"Doe (required)\",value:lastName,required:true,onChange:function onChange(e){return setLastName(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"span 6\"},React.createElement(Label,null,\"Company\"),React.createElement(Input,{placeholder:\"Technicolor\",value:company,onChange:function onChange(e){return setCompany(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"span 6\"},React.createElement(Label,null,\"Title\"),React.createElement(Input,{placeholder:\"Mixer\",value:title,onChange:function onChange(e){return setTitle(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"span 2\"},React.createElement(Label,null,\"Country\"),React.createElement(Select,null,React.createElement(\"option\",{value:\"US\",default:true},\"US\"),React.createElement(\"option\",{value:\"UK\"},\"UK\"),React.createElement(\"option\",{value:\"CA\"},\"CA\"))),React.createElement(InputWrapper,{gridColumn:\"span 4\"},React.createElement(Label,null,\"Phone Number\"),React.createElement(Input,{as:InputMask,mask:\"(999) 999-9999\",placeholder:\"(555) 555-5555\",value:phone,onChange:function onChange(e){return setPhone(e.target.value);}//   e.target.value.isNaN ? null : setPhone(e.target.value)\n})),React.createElement(InputWrapper,{gridColumn:\"span 6\"},React.createElement(Label,null,\"Email\"),React.createElement(Input,{type:\"email\",placeholder:\"johndoe@email.com\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"span 12\"},React.createElement(Label,null,\"Notes\"),React.createElement(Textarea,{placeholder:\"Something that may be useful to know.\",value:notes,onChange:function onChange(e){return setNotes(e.target.value);}})),React.createElement(InputWrapper,{gridColumn:\"4 / 10\"},firstName&&lastName?React.createElement(RedButton,{minWidth:\"100%\"},\"Create \".concat(firstName)):React.createElement(InactiveButton,{minWidth:\"100%\",disabled:true},\"Create Contact\"))),error&&React.createElement(Error,null,error.message))));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Contacts/NewContactModal.js"],"names":["React","useState","InputMask","useModal","useMutation","CREATE_CONTACT","ALL_CONTACTS_QUERY","HOME_PAGE_QUERY","Button","Modal","ModalArea","ModalCloseIcon","PageHeading","GridWrapper","InputWrapper","PositionWrapper","Input","Label","Select","Textarea","Required","RedButton","InactiveButton","RoundButton","BlackButton","Error","NewContactModal","redButton","roundButton","blackButton","firstName","setFirstName","lastName","setLastName","company","setCompany","title","setTitle","phone","setPhone","email","setEmail","notes","setNotes","isShowing","toggle","createContact","error","formSubmit","e","preventDefault","variables","phoneNumber","refetchQueries","query","limit","reverse","onCompleted","createCompleted","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useModal } from \"../../utils\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_CONTACT, ALL_CONTACTS_QUERY, HOME_PAGE_QUERY } from \"../../gql\";\n\nimport { Button } from \"@material-ui/core\";\n\nimport { Modal, ModalArea, ModalCloseIcon } from \"../utilities\";\nimport { PageHeading } from \"../../styled/typography\";\nimport {\n  GridWrapper,\n  InputWrapper,\n  PositionWrapper\n} from \"../../styled/containers\";\nimport { Input, Label, Select, Textarea, Required } from \"../../styled/forms\";\nimport {\n  RedButton,\n  InactiveButton,\n  RoundButton,\n  BlackButton\n} from \"../../styled/buttons\";\nimport { Error } from \"../global\";\n\nexport const NewContactModal = ({ redButton, roundButton, blackButton }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  const { isShowing, toggle } = useModal();\n\n  const [createContact, { error }] = useMutation(CREATE_CONTACT);\n\n  const formSubmit = (\n    e,\n    firstName,\n    lastName,\n    company,\n    title,\n    phone,\n    email,\n    notes\n  ) => {\n    e.preventDefault();\n\n    createContact({\n      variables: {\n        firstName,\n        lastName,\n        company,\n        title,\n        email,\n        notes,\n        phoneNumber: phone\n      },\n      refetchQueries: [\n        { query: ALL_CONTACTS_QUERY },\n        { query: HOME_PAGE_QUERY, variables: { limit: 8, reverse: true } }\n      ],\n      onCompleted: createCompleted()\n    });\n  };\n\n  const createCompleted = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setCompany(\"\");\n    setTitle(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    toggle();\n  };\n\n  return (\n    <>\n      {redButton && (\n        <RedButton small onClick={() => toggle()}>\n          New Contact\n        </RedButton>\n      )}\n      {blackButton && (\n        <Button\n          size=\"small\"\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => toggle()}\n        >\n          New Contact\n        </Button>\n      )}\n      {roundButton && (\n        <PositionWrapper position=\"fixed\" bottom=\"5%\" right=\"4%\">\n          <RoundButton onClick={() => toggle()}>+</RoundButton>\n        </PositionWrapper>\n      )}\n      <Modal isShowing={isShowing}>\n        <ModalArea>\n          <ModalCloseIcon toggle={toggle} />\n\n          <PageHeading>New Contact</PageHeading>\n          <GridWrapper\n            as=\"form\"\n            minWidth=\"622px;\"\n            maxWidth=\"622px;\"\n            margin=\"20px 0 0 0 \"\n            onSubmit={e =>\n              formSubmit(\n                e,\n                firstName,\n                lastName,\n                company,\n                title,\n                phone,\n                email,\n                notes\n              )\n            }\n          >\n            <InputWrapper gridColumn=\"span 6\">\n              <Label>\n                FirstName <Required>*</Required>\n              </Label>\n              <Input\n                placeholder=\"John (required)\"\n                value={firstName}\n                required\n                onChange={e => setFirstName(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <Label>\n                LastName <Required>*</Required>\n              </Label>\n              <Input\n                placeholder=\"Doe (required)\"\n                value={lastName}\n                required\n                onChange={e => setLastName(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <Label>Company</Label>\n              <Input\n                placeholder=\"Technicolor\"\n                value={company}\n                onChange={e => setCompany(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <Label>Title</Label>\n              <Input\n                placeholder=\"Mixer\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 2\">\n              <Label>Country</Label>\n              <Select>\n                <option value=\"US\" default>\n                  US\n                </option>\n                <option value=\"UK\">UK</option>\n                <option value=\"CA\">CA</option>\n              </Select>\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 4\">\n              <Label>Phone Number</Label>\n              <Input\n                as={InputMask}\n                mask=\"(999) 999-9999\"\n                placeholder=\"(555) 555-5555\"\n                value={phone}\n                onChange={\n                  e => setPhone(e.target.value)\n                  //   e.target.value.isNaN ? null : setPhone(e.target.value)\n                }\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 6\">\n              <Label>Email</Label>\n              <Input\n                type=\"email\"\n                placeholder=\"johndoe@email.com\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"span 12\">\n              <Label>Notes</Label>\n              <Textarea\n                placeholder=\"Something that may be useful to know.\"\n                value={notes}\n                onChange={e => setNotes(e.target.value)}\n              />\n            </InputWrapper>\n            <InputWrapper gridColumn=\"4 / 10\">\n              {firstName && lastName ? (\n                <RedButton minWidth=\"100%\">{`Create ${firstName}`}</RedButton>\n              ) : (\n                <InactiveButton minWidth=\"100%\" disabled>\n                  Create Contact\n                </InactiveButton>\n              )}\n            </InputWrapper>\n          </GridWrapper>\n          {error && <Error>{error.message}</Error>}\n        </ModalArea>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}