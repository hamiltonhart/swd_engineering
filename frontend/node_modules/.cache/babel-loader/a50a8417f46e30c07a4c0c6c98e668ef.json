{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/DeleteDriveIcon.js\";\nimport React from \"react\";\nimport { IconButton, Typography, Button } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { Modal, ModalContent } from \"../global/Modal\";\nimport { useToggle } from \"../../utils\";\nexport const DeleteDriveIcon = ({\n  drive\n}) => {\n  const {\n    isShowing,\n    toggle\n  } = useToggle();\n  return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(DeleteForeverIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), isShowing && React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ModalContent, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, `Are you sure you want to delete Drive #${drive.driveNumber}? This cannot be undone`), React.createElement(Button, {\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Delete\")))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/Work/swd_engineering/swd_engineering/frontend/src/components/Drives/DeleteDriveIcon.js"],"names":["React","IconButton","Typography","Button","DeleteForeverIcon","Modal","ModalContent","useToggle","DeleteDriveIcon","drive","isShowing","toggle","driveNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,MAAjC,QAA+C,mBAA/C;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,iBAApC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC5C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBJ,SAAS,EAAvC;AACA,SACE,0CACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGD,SAAS,IACR,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc,0CAAyCF,KAAK,CAACG,WAAY,yBAAzE,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,CALJ,CADF;AAoBD,CAtBM","sourcesContent":["import React from \"react\";\n\nimport { IconButton, Typography, Button } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport { Modal, ModalContent } from \"../global/Modal\";\n\nimport { useToggle } from \"../../utils\";\n\nexport const DeleteDriveIcon = ({ drive }) => {\n  const { isShowing, toggle } = useToggle();\n  return (\n    <>\n      <IconButton onClick={toggle}>\n        <DeleteForeverIcon />\n      </IconButton>\n      {isShowing && (\n        <Modal>\n          <ModalContent toggle={toggle}>\n            <div>\n              <Typography>{`Are you sure you want to delete Drive #${drive.driveNumber}? This cannot be undone`}</Typography>\n              <Button variant=\"outlined\">Cancel</Button>\n              <Button variant=\"outlined\" color=\"primary\">\n                Delete\n              </Button>\n            </div>\n          </ModalContent>\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}